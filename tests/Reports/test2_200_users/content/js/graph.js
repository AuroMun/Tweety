/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 19800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? 19800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 220422.0, "series": [{"data": [[0.0, 39688.0], [0.1, 39688.0], [0.2, 39688.0], [0.3, 39688.0], [0.4, 39688.0], [0.5, 39919.0], [0.6, 39919.0], [0.7, 39919.0], [0.8, 39919.0], [0.9, 39919.0], [1.0, 108580.0], [1.1, 108580.0], [1.2, 108580.0], [1.3, 108580.0], [1.4, 108580.0], [1.5, 113167.0], [1.6, 113167.0], [1.7, 113167.0], [1.8, 113167.0], [1.9, 113167.0], [2.0, 115158.0], [2.1, 115158.0], [2.2, 115158.0], [2.3, 115158.0], [2.4, 115158.0], [2.5, 119791.0], [2.6, 119791.0], [2.7, 119791.0], [2.8, 119791.0], [2.9, 119791.0], [3.0, 123055.0], [3.1, 123055.0], [3.2, 123055.0], [3.3, 123055.0], [3.4, 123055.0], [3.5, 124656.0], [3.6, 124656.0], [3.7, 124656.0], [3.8, 124656.0], [3.9, 124656.0], [4.0, 124981.0], [4.1, 124981.0], [4.2, 124981.0], [4.3, 124981.0], [4.4, 124981.0], [4.5, 125804.0], [4.6, 125804.0], [4.7, 125804.0], [4.8, 125804.0], [4.9, 125804.0], [5.0, 129125.0], [5.1, 129125.0], [5.2, 129125.0], [5.3, 129125.0], [5.4, 129125.0], [5.5, 137373.0], [5.6, 137373.0], [5.7, 137373.0], [5.8, 137373.0], [5.9, 137373.0], [6.0, 141072.0], [6.1, 141072.0], [6.2, 141072.0], [6.3, 141072.0], [6.4, 141072.0], [6.5, 147786.0], [6.6, 147786.0], [6.7, 147786.0], [6.8, 147786.0], [6.9, 147786.0], [7.0, 148962.0], [7.1, 148962.0], [7.2, 148962.0], [7.3, 148962.0], [7.4, 148962.0], [7.5, 149223.0], [7.6, 149223.0], [7.7, 149223.0], [7.8, 149223.0], [7.9, 149223.0], [8.0, 149755.0], [8.1, 149755.0], [8.2, 149755.0], [8.3, 149755.0], [8.4, 149755.0], [8.5, 151373.0], [8.6, 151373.0], [8.7, 151373.0], [8.8, 151373.0], [8.9, 151373.0], [9.0, 152491.0], [9.1, 152491.0], [9.2, 152491.0], [9.3, 152491.0], [9.4, 152491.0], [9.5, 158837.0], [9.6, 158837.0], [9.7, 158837.0], [9.8, 158837.0], [9.9, 158837.0], [10.0, 163048.0], [10.1, 163048.0], [10.2, 163048.0], [10.3, 163048.0], [10.4, 163048.0], [10.5, 165615.0], [10.6, 165615.0], [10.7, 165615.0], [10.8, 165615.0], [10.9, 165615.0], [11.0, 167537.0], [11.1, 167537.0], [11.2, 167537.0], [11.3, 167537.0], [11.4, 167537.0], [11.5, 173567.0], [11.6, 173567.0], [11.7, 173567.0], [11.8, 173567.0], [11.9, 173567.0], [12.0, 177720.0], [12.1, 177720.0], [12.2, 177720.0], [12.3, 177720.0], [12.4, 177720.0], [12.5, 178094.0], [12.6, 178094.0], [12.7, 178094.0], [12.8, 178094.0], [12.9, 178094.0], [13.0, 181202.0], [13.1, 181202.0], [13.2, 181202.0], [13.3, 181202.0], [13.4, 181202.0], [13.5, 182417.0], [13.6, 182417.0], [13.7, 182417.0], [13.8, 182417.0], [13.9, 182417.0], [14.0, 183602.0], [14.1, 183602.0], [14.2, 183602.0], [14.3, 183602.0], [14.4, 183602.0], [14.5, 184060.0], [14.6, 184060.0], [14.7, 184060.0], [14.8, 184060.0], [14.9, 184060.0], [15.0, 184802.0], [15.1, 184802.0], [15.2, 184802.0], [15.3, 184802.0], [15.4, 184802.0], [15.5, 186576.0], [15.6, 186576.0], [15.7, 186576.0], [15.8, 186576.0], [15.9, 186576.0], [16.0, 188411.0], [16.1, 188411.0], [16.2, 188411.0], [16.3, 188411.0], [16.4, 188411.0], [16.5, 192763.0], [16.6, 192763.0], [16.7, 192763.0], [16.8, 192763.0], [16.9, 192763.0], [17.0, 196276.0], [17.1, 196276.0], [17.2, 196276.0], [17.3, 196276.0], [17.4, 196276.0], [17.5, 196518.0], [17.6, 196518.0], [17.7, 196518.0], [17.8, 196518.0], [17.9, 196518.0], [18.0, 199033.0], [18.1, 199033.0], [18.2, 199033.0], [18.3, 199033.0], [18.4, 199033.0], [18.5, 199842.0], [18.6, 199842.0], [18.7, 199842.0], [18.8, 199842.0], [18.9, 199842.0], [19.0, 202509.0], [19.1, 202509.0], [19.2, 202509.0], [19.3, 202509.0], [19.4, 202509.0], [19.5, 202781.0], [19.6, 202781.0], [19.7, 202781.0], [19.8, 202781.0], [19.9, 202781.0], [20.0, 202815.0], [20.1, 202815.0], [20.2, 202815.0], [20.3, 202815.0], [20.4, 202815.0], [20.5, 203878.0], [20.6, 203878.0], [20.7, 203878.0], [20.8, 203878.0], [20.9, 203878.0], [21.0, 203928.0], [21.1, 203928.0], [21.2, 203928.0], [21.3, 203928.0], [21.4, 203928.0], [21.5, 204028.0], [21.6, 204028.0], [21.7, 204028.0], [21.8, 204028.0], [21.9, 204028.0], [22.0, 204143.0], [22.1, 204143.0], [22.2, 204143.0], [22.3, 204143.0], [22.4, 204143.0], [22.5, 204250.0], [22.6, 204250.0], [22.7, 204250.0], [22.8, 204250.0], [22.9, 204250.0], [23.0, 204359.0], [23.1, 204359.0], [23.2, 204359.0], [23.3, 204359.0], [23.4, 204359.0], [23.5, 204420.0], [23.6, 204420.0], [23.7, 204420.0], [23.8, 204420.0], [23.9, 204420.0], [24.0, 204546.0], [24.1, 204546.0], [24.2, 204546.0], [24.3, 204546.0], [24.4, 204546.0], [24.5, 204604.0], [24.6, 204604.0], [24.7, 204604.0], [24.8, 204604.0], [24.9, 204604.0], [25.0, 204701.0], [25.1, 204701.0], [25.2, 204701.0], [25.3, 204701.0], [25.4, 204701.0], [25.5, 204716.0], [25.6, 204716.0], [25.7, 204716.0], [25.8, 204716.0], [25.9, 204716.0], [26.0, 204784.0], [26.1, 204784.0], [26.2, 204784.0], [26.3, 204784.0], [26.4, 204784.0], [26.5, 204865.0], [26.6, 204865.0], [26.7, 204865.0], [26.8, 204865.0], [26.9, 204865.0], [27.0, 204883.0], [27.1, 204883.0], [27.2, 204883.0], [27.3, 204883.0], [27.4, 204883.0], [27.5, 204924.0], [27.6, 204924.0], [27.7, 204924.0], [27.8, 204924.0], [27.9, 204924.0], [28.0, 205292.0], [28.1, 205292.0], [28.2, 205292.0], [28.3, 205292.0], [28.4, 205292.0], [28.5, 205299.0], [28.6, 205299.0], [28.7, 205299.0], [28.8, 205299.0], [28.9, 205299.0], [29.0, 205528.0], [29.1, 205528.0], [29.2, 205528.0], [29.3, 205528.0], [29.4, 205528.0], [29.5, 205618.0], [29.6, 205618.0], [29.7, 205618.0], [29.8, 205618.0], [29.9, 205618.0], [30.0, 205755.0], [30.1, 205755.0], [30.2, 205755.0], [30.3, 205755.0], [30.4, 205755.0], [30.5, 205788.0], [30.6, 205788.0], [30.7, 205788.0], [30.8, 205788.0], [30.9, 205788.0], [31.0, 206014.0], [31.1, 206014.0], [31.2, 206014.0], [31.3, 206014.0], [31.4, 206014.0], [31.5, 206066.0], [31.6, 206066.0], [31.7, 206066.0], [31.8, 206066.0], [31.9, 206066.0], [32.0, 206174.0], [32.1, 206174.0], [32.2, 206174.0], [32.3, 206174.0], [32.4, 206174.0], [32.5, 206179.0], [32.6, 206179.0], [32.7, 206179.0], [32.8, 206179.0], [32.9, 206179.0], [33.0, 206266.0], [33.1, 206266.0], [33.2, 206266.0], [33.3, 206266.0], [33.4, 206266.0], [33.5, 206297.0], [33.6, 206297.0], [33.7, 206297.0], [33.8, 206297.0], [33.9, 206297.0], [34.0, 206309.0], [34.1, 206309.0], [34.2, 206309.0], [34.3, 206309.0], [34.4, 206309.0], [34.5, 206397.0], [34.6, 206397.0], [34.7, 206397.0], [34.8, 206397.0], [34.9, 206397.0], [35.0, 206419.0], [35.1, 206419.0], [35.2, 206419.0], [35.3, 206419.0], [35.4, 206419.0], [35.5, 206530.0], [35.6, 206530.0], [35.7, 206530.0], [35.8, 206530.0], [35.9, 206530.0], [36.0, 206563.0], [36.1, 206563.0], [36.2, 206563.0], [36.3, 206563.0], [36.4, 206563.0], [36.5, 206715.0], [36.6, 206715.0], [36.7, 206715.0], [36.8, 206715.0], [36.9, 206715.0], [37.0, 206810.0], [37.1, 206810.0], [37.2, 206810.0], [37.3, 206810.0], [37.4, 206810.0], [37.5, 206834.0], [37.6, 206834.0], [37.7, 206834.0], [37.8, 206834.0], [37.9, 206834.0], [38.0, 206853.0], [38.1, 206853.0], [38.2, 206853.0], [38.3, 206853.0], [38.4, 206853.0], [38.5, 207031.0], [38.6, 207031.0], [38.7, 207031.0], [38.8, 207031.0], [38.9, 207031.0], [39.0, 207046.0], [39.1, 207046.0], [39.2, 207046.0], [39.3, 207046.0], [39.4, 207046.0], [39.5, 207114.0], [39.6, 207114.0], [39.7, 207114.0], [39.8, 207114.0], [39.9, 207114.0], [40.0, 207189.0], [40.1, 207189.0], [40.2, 207189.0], [40.3, 207189.0], [40.4, 207189.0], [40.5, 207224.0], [40.6, 207224.0], [40.7, 207224.0], [40.8, 207224.0], [40.9, 207224.0], [41.0, 207268.0], [41.1, 207268.0], [41.2, 207268.0], [41.3, 207268.0], [41.4, 207268.0], [41.5, 207327.0], [41.6, 207327.0], [41.7, 207327.0], [41.8, 207327.0], [41.9, 207327.0], [42.0, 207397.0], [42.1, 207397.0], [42.2, 207397.0], [42.3, 207397.0], [42.4, 207397.0], [42.5, 207542.0], [42.6, 207542.0], [42.7, 207542.0], [42.8, 207542.0], [42.9, 207542.0], [43.0, 207952.0], [43.1, 207952.0], [43.2, 207952.0], [43.3, 207952.0], [43.4, 207952.0], [43.5, 207977.0], [43.6, 207977.0], [43.7, 207977.0], [43.8, 207977.0], [43.9, 207977.0], [44.0, 208121.0], [44.1, 208121.0], [44.2, 208121.0], [44.3, 208121.0], [44.4, 208121.0], [44.5, 208280.0], [44.6, 208280.0], [44.7, 208280.0], [44.8, 208280.0], [44.9, 208280.0], [45.0, 208394.0], [45.1, 208394.0], [45.2, 208394.0], [45.3, 208394.0], [45.4, 208394.0], [45.5, 208401.0], [45.6, 208401.0], [45.7, 208401.0], [45.8, 208401.0], [45.9, 208401.0], [46.0, 208770.0], [46.1, 208770.0], [46.2, 208770.0], [46.3, 208770.0], [46.4, 208770.0], [46.5, 208942.0], [46.6, 208942.0], [46.7, 208942.0], [46.8, 208942.0], [46.9, 208942.0], [47.0, 209017.0], [47.1, 209017.0], [47.2, 209017.0], [47.3, 209017.0], [47.4, 209017.0], [47.5, 209078.0], [47.6, 209078.0], [47.7, 209078.0], [47.8, 209078.0], [47.9, 209078.0], [48.0, 209183.0], [48.1, 209183.0], [48.2, 209183.0], [48.3, 209183.0], [48.4, 209183.0], [48.5, 209311.0], [48.6, 209311.0], [48.7, 209311.0], [48.8, 209311.0], [48.9, 209311.0], [49.0, 209331.0], [49.1, 209331.0], [49.2, 209331.0], [49.3, 209331.0], [49.4, 209331.0], [49.5, 209366.0], [49.6, 209366.0], [49.7, 209366.0], [49.8, 209366.0], [49.9, 209366.0], [50.0, 209437.0], [50.1, 209437.0], [50.2, 209437.0], [50.3, 209437.0], [50.4, 209437.0], [50.5, 209448.0], [50.6, 209448.0], [50.7, 209448.0], [50.8, 209448.0], [50.9, 209448.0], [51.0, 209693.0], [51.1, 209693.0], [51.2, 209693.0], [51.3, 209693.0], [51.4, 209693.0], [51.5, 209782.0], [51.6, 209782.0], [51.7, 209782.0], [51.8, 209782.0], [51.9, 209782.0], [52.0, 209825.0], [52.1, 209825.0], [52.2, 209825.0], [52.3, 209825.0], [52.4, 209825.0], [52.5, 209920.0], [52.6, 209920.0], [52.7, 209920.0], [52.8, 209920.0], [52.9, 209920.0], [53.0, 209942.0], [53.1, 209942.0], [53.2, 209942.0], [53.3, 209942.0], [53.4, 209942.0], [53.5, 209953.0], [53.6, 209953.0], [53.7, 209953.0], [53.8, 209953.0], [53.9, 209953.0], [54.0, 209961.0], [54.1, 209961.0], [54.2, 209961.0], [54.3, 209961.0], [54.4, 209961.0], [54.5, 209997.0], [54.6, 209997.0], [54.7, 209997.0], [54.8, 209997.0], [54.9, 209997.0], [55.0, 210003.0], [55.1, 210003.0], [55.2, 210003.0], [55.3, 210003.0], [55.4, 210003.0], [55.5, 210045.0], [55.6, 210045.0], [55.7, 210045.0], [55.8, 210045.0], [55.9, 210045.0], [56.0, 210092.0], [56.1, 210092.0], [56.2, 210092.0], [56.3, 210092.0], [56.4, 210092.0], [56.5, 210191.0], [56.6, 210191.0], [56.7, 210191.0], [56.8, 210191.0], [56.9, 210191.0], [57.0, 210638.0], [57.1, 210638.0], [57.2, 210638.0], [57.3, 210638.0], [57.4, 210638.0], [57.5, 210680.0], [57.6, 210680.0], [57.7, 210680.0], [57.8, 210680.0], [57.9, 210680.0], [58.0, 210687.0], [58.1, 210687.0], [58.2, 210687.0], [58.3, 210687.0], [58.4, 210687.0], [58.5, 210711.0], [58.6, 210711.0], [58.7, 210711.0], [58.8, 210711.0], [58.9, 210711.0], [59.0, 210763.0], [59.1, 210763.0], [59.2, 210763.0], [59.3, 210763.0], [59.4, 210763.0], [59.5, 210814.0], [59.6, 210814.0], [59.7, 210814.0], [59.8, 210814.0], [59.9, 210814.0], [60.0, 210850.0], [60.1, 210850.0], [60.2, 210850.0], [60.3, 210850.0], [60.4, 210850.0], [60.5, 210971.0], [60.6, 210971.0], [60.7, 210971.0], [60.8, 210971.0], [60.9, 210971.0], [61.0, 211013.0], [61.1, 211013.0], [61.2, 211013.0], [61.3, 211013.0], [61.4, 211013.0], [61.5, 211140.0], [61.6, 211140.0], [61.7, 211140.0], [61.8, 211140.0], [61.9, 211140.0], [62.0, 211191.0], [62.1, 211191.0], [62.2, 211191.0], [62.3, 211191.0], [62.4, 211191.0], [62.5, 211297.0], [62.6, 211297.0], [62.7, 211297.0], [62.8, 211297.0], [62.9, 211297.0], [63.0, 211331.0], [63.1, 211331.0], [63.2, 211331.0], [63.3, 211331.0], [63.4, 211331.0], [63.5, 211460.0], [63.6, 211460.0], [63.7, 211460.0], [63.8, 211460.0], [63.9, 211460.0], [64.0, 211473.0], [64.1, 211473.0], [64.2, 211473.0], [64.3, 211473.0], [64.4, 211473.0], [64.5, 211493.0], [64.6, 211493.0], [64.7, 211493.0], [64.8, 211493.0], [64.9, 211493.0], [65.0, 211500.0], [65.1, 211500.0], [65.2, 211500.0], [65.3, 211500.0], [65.4, 211500.0], [65.5, 211510.0], [65.6, 211510.0], [65.7, 211510.0], [65.8, 211510.0], [65.9, 211510.0], [66.0, 211529.0], [66.1, 211529.0], [66.2, 211529.0], [66.3, 211529.0], [66.4, 211529.0], [66.5, 211682.0], [66.6, 211682.0], [66.7, 211682.0], [66.8, 211682.0], [66.9, 211682.0], [67.0, 211714.0], [67.1, 211714.0], [67.2, 211714.0], [67.3, 211714.0], [67.4, 211714.0], [67.5, 211769.0], [67.6, 211769.0], [67.7, 211769.0], [67.8, 211769.0], [67.9, 211769.0], [68.0, 212024.0], [68.1, 212024.0], [68.2, 212024.0], [68.3, 212024.0], [68.4, 212024.0], [68.5, 212093.0], [68.6, 212093.0], [68.7, 212093.0], [68.8, 212093.0], [68.9, 212093.0], [69.0, 212115.0], [69.1, 212115.0], [69.2, 212115.0], [69.3, 212115.0], [69.4, 212115.0], [69.5, 212160.0], [69.6, 212160.0], [69.7, 212160.0], [69.8, 212160.0], [69.9, 212160.0], [70.0, 212314.0], [70.1, 212314.0], [70.2, 212314.0], [70.3, 212314.0], [70.4, 212314.0], [70.5, 212678.0], [70.6, 212678.0], [70.7, 212678.0], [70.8, 212678.0], [70.9, 212678.0], [71.0, 212961.0], [71.1, 212961.0], [71.2, 212961.0], [71.3, 212961.0], [71.4, 212961.0], [71.5, 213092.0], [71.6, 213092.0], [71.7, 213092.0], [71.8, 213092.0], [71.9, 213092.0], [72.0, 213234.0], [72.1, 213234.0], [72.2, 213234.0], [72.3, 213234.0], [72.4, 213234.0], [72.5, 213362.0], [72.6, 213362.0], [72.7, 213362.0], [72.8, 213362.0], [72.9, 213362.0], [73.0, 213473.0], [73.1, 213473.0], [73.2, 213473.0], [73.3, 213473.0], [73.4, 213473.0], [73.5, 213561.0], [73.6, 213561.0], [73.7, 213561.0], [73.8, 213561.0], [73.9, 213561.0], [74.0, 213793.0], [74.1, 213793.0], [74.2, 213793.0], [74.3, 213793.0], [74.4, 213793.0], [74.5, 213826.0], [74.6, 213826.0], [74.7, 213826.0], [74.8, 213826.0], [74.9, 213826.0], [75.0, 213892.0], [75.1, 213892.0], [75.2, 213892.0], [75.3, 213892.0], [75.4, 213892.0], [75.5, 213962.0], [75.6, 213962.0], [75.7, 213962.0], [75.8, 213962.0], [75.9, 213962.0], [76.0, 214017.0], [76.1, 214017.0], [76.2, 214017.0], [76.3, 214017.0], [76.4, 214017.0], [76.5, 214224.0], [76.6, 214224.0], [76.7, 214224.0], [76.8, 214224.0], [76.9, 214224.0], [77.0, 214445.0], [77.1, 214445.0], [77.2, 214445.0], [77.3, 214445.0], [77.4, 214445.0], [77.5, 214881.0], [77.6, 214881.0], [77.7, 214881.0], [77.8, 214881.0], [77.9, 214881.0], [78.0, 214890.0], [78.1, 214890.0], [78.2, 214890.0], [78.3, 214890.0], [78.4, 214890.0], [78.5, 215063.0], [78.6, 215063.0], [78.7, 215063.0], [78.8, 215063.0], [78.9, 215063.0], [79.0, 215348.0], [79.1, 215348.0], [79.2, 215348.0], [79.3, 215348.0], [79.4, 215348.0], [79.5, 215957.0], [79.6, 215957.0], [79.7, 215957.0], [79.8, 215957.0], [79.9, 215957.0], [80.0, 215971.0], [80.1, 215971.0], [80.2, 215971.0], [80.3, 215971.0], [80.4, 215971.0], [80.5, 216078.0], [80.6, 216078.0], [80.7, 216078.0], [80.8, 216078.0], [80.9, 216078.0], [81.0, 216106.0], [81.1, 216106.0], [81.2, 216106.0], [81.3, 216106.0], [81.4, 216106.0], [81.5, 216374.0], [81.6, 216374.0], [81.7, 216374.0], [81.8, 216374.0], [81.9, 216374.0], [82.0, 216457.0], [82.1, 216457.0], [82.2, 216457.0], [82.3, 216457.0], [82.4, 216457.0], [82.5, 216597.0], [82.6, 216597.0], [82.7, 216597.0], [82.8, 216597.0], [82.9, 216597.0], [83.0, 216743.0], [83.1, 216743.0], [83.2, 216743.0], [83.3, 216743.0], [83.4, 216743.0], [83.5, 216752.0], [83.6, 216752.0], [83.7, 216752.0], [83.8, 216752.0], [83.9, 216752.0], [84.0, 216970.0], [84.1, 216970.0], [84.2, 216970.0], [84.3, 216970.0], [84.4, 216970.0], [84.5, 216998.0], [84.6, 216998.0], [84.7, 216998.0], [84.8, 216998.0], [84.9, 216998.0], [85.0, 217120.0], [85.1, 217120.0], [85.2, 217120.0], [85.3, 217120.0], [85.4, 217120.0], [85.5, 217190.0], [85.6, 217190.0], [85.7, 217190.0], [85.8, 217190.0], [85.9, 217190.0], [86.0, 217214.0], [86.1, 217214.0], [86.2, 217214.0], [86.3, 217214.0], [86.4, 217214.0], [86.5, 217591.0], [86.6, 217591.0], [86.7, 217591.0], [86.8, 217591.0], [86.9, 217591.0], [87.0, 217607.0], [87.1, 217607.0], [87.2, 217607.0], [87.3, 217607.0], [87.4, 217607.0], [87.5, 217639.0], [87.6, 217639.0], [87.7, 217639.0], [87.8, 217639.0], [87.9, 217639.0], [88.0, 217656.0], [88.1, 217656.0], [88.2, 217656.0], [88.3, 217656.0], [88.4, 217656.0], [88.5, 217976.0], [88.6, 217976.0], [88.7, 217976.0], [88.8, 217976.0], [88.9, 217976.0], [89.0, 217987.0], [89.1, 217987.0], [89.2, 217987.0], [89.3, 217987.0], [89.4, 217987.0], [89.5, 218269.0], [89.6, 218269.0], [89.7, 218269.0], [89.8, 218269.0], [89.9, 218269.0], [90.0, 218275.0], [90.1, 218275.0], [90.2, 218275.0], [90.3, 218275.0], [90.4, 218275.0], [90.5, 218360.0], [90.6, 218360.0], [90.7, 218360.0], [90.8, 218360.0], [90.9, 218360.0], [91.0, 218428.0], [91.1, 218428.0], [91.2, 218428.0], [91.3, 218428.0], [91.4, 218428.0], [91.5, 218491.0], [91.6, 218491.0], [91.7, 218491.0], [91.8, 218491.0], [91.9, 218491.0], [92.0, 218561.0], [92.1, 218561.0], [92.2, 218561.0], [92.3, 218561.0], [92.4, 218561.0], [92.5, 218832.0], [92.6, 218832.0], [92.7, 218832.0], [92.8, 218832.0], [92.9, 218832.0], [93.0, 218837.0], [93.1, 218837.0], [93.2, 218837.0], [93.3, 218837.0], [93.4, 218837.0], [93.5, 218879.0], [93.6, 218879.0], [93.7, 218879.0], [93.8, 218879.0], [93.9, 218879.0], [94.0, 219137.0], [94.1, 219137.0], [94.2, 219137.0], [94.3, 219137.0], [94.4, 219137.0], [94.5, 219217.0], [94.6, 219217.0], [94.7, 219217.0], [94.8, 219217.0], [94.9, 219217.0], [95.0, 219248.0], [95.1, 219248.0], [95.2, 219248.0], [95.3, 219248.0], [95.4, 219248.0], [95.5, 219297.0], [95.6, 219297.0], [95.7, 219297.0], [95.8, 219297.0], [95.9, 219297.0], [96.0, 219418.0], [96.1, 219418.0], [96.2, 219418.0], [96.3, 219418.0], [96.4, 219418.0], [96.5, 219802.0], [96.6, 219802.0], [96.7, 219802.0], [96.8, 219802.0], [96.9, 219802.0], [97.0, 219970.0], [97.1, 219970.0], [97.2, 219970.0], [97.3, 219970.0], [97.4, 219970.0], [97.5, 220168.0], [97.6, 220168.0], [97.7, 220168.0], [97.8, 220168.0], [97.9, 220168.0], [98.0, 220196.0], [98.1, 220196.0], [98.2, 220196.0], [98.3, 220196.0], [98.4, 220196.0], [98.5, 220271.0], [98.6, 220271.0], [98.7, 220271.0], [98.8, 220271.0], [98.9, 220271.0], [99.0, 220300.0], [99.1, 220300.0], [99.2, 220300.0], [99.3, 220300.0], [99.4, 220300.0], [99.5, 220422.0], [99.6, 220422.0], [99.7, 220422.0], [99.8, 220422.0], [99.9, 220422.0]], "isOverall": false, "label": "Generate Login Request", "isController": false}, {"data": [[0.0, 36214.0], [0.1, 36214.0], [0.2, 36214.0], [0.3, 36214.0], [0.4, 36214.0], [0.5, 74457.0], [0.6, 74457.0], [0.7, 74457.0], [0.8, 74457.0], [0.9, 74457.0], [1.0, 74809.0], [1.1, 74809.0], [1.2, 74809.0], [1.3, 74809.0], [1.4, 74809.0], [1.5, 75086.0], [1.6, 75086.0], [1.7, 75086.0], [1.8, 75086.0], [1.9, 75086.0], [2.0, 75095.0], [2.1, 75095.0], [2.2, 75095.0], [2.3, 75095.0], [2.4, 75095.0], [2.5, 75806.0], [2.6, 75806.0], [2.7, 75806.0], [2.8, 75806.0], [2.9, 75806.0], [3.0, 75878.0], [3.1, 75878.0], [3.2, 75878.0], [3.3, 75878.0], [3.4, 75878.0], [3.5, 76025.0], [3.6, 76025.0], [3.7, 76025.0], [3.8, 76025.0], [3.9, 76025.0], [4.0, 76065.0], [4.1, 76065.0], [4.2, 76065.0], [4.3, 76065.0], [4.4, 76065.0], [4.5, 76079.0], [4.6, 76079.0], [4.7, 76079.0], [4.8, 76079.0], [4.9, 76079.0], [5.0, 76323.0], [5.1, 76323.0], [5.2, 76323.0], [5.3, 76323.0], [5.4, 76323.0], [5.5, 76466.0], [5.6, 76466.0], [5.7, 76466.0], [5.8, 76466.0], [5.9, 76466.0], [6.0, 76781.0], [6.1, 76781.0], [6.2, 76781.0], [6.3, 76781.0], [6.4, 76781.0], [6.5, 76826.0], [6.6, 76826.0], [6.7, 76826.0], [6.8, 76826.0], [6.9, 76826.0], [7.0, 77256.0], [7.1, 77256.0], [7.2, 77256.0], [7.3, 77256.0], [7.4, 77256.0], [7.5, 77266.0], [7.6, 77266.0], [7.7, 77266.0], [7.8, 77266.0], [7.9, 77266.0], [8.0, 77299.0], [8.1, 77299.0], [8.2, 77299.0], [8.3, 77299.0], [8.4, 77299.0], [8.5, 77317.0], [8.6, 77317.0], [8.7, 77317.0], [8.8, 77317.0], [8.9, 77317.0], [9.0, 78252.0], [9.1, 78252.0], [9.2, 78252.0], [9.3, 78252.0], [9.4, 78252.0], [9.5, 78431.0], [9.6, 78431.0], [9.7, 78431.0], [9.8, 78431.0], [9.9, 78431.0], [10.0, 78572.0], [10.1, 78572.0], [10.2, 78572.0], [10.3, 78572.0], [10.4, 78572.0], [10.5, 78649.0], [10.6, 78649.0], [10.7, 78649.0], [10.8, 78649.0], [10.9, 78649.0], [11.0, 78651.0], [11.1, 78651.0], [11.2, 78651.0], [11.3, 78651.0], [11.4, 78651.0], [11.5, 78855.0], [11.6, 78855.0], [11.7, 78855.0], [11.8, 78855.0], [11.9, 78855.0], [12.0, 78938.0], [12.1, 78938.0], [12.2, 78938.0], [12.3, 78938.0], [12.4, 78938.0], [12.5, 79127.0], [12.6, 79127.0], [12.7, 79127.0], [12.8, 79127.0], [12.9, 79127.0], [13.0, 79169.0], [13.1, 79169.0], [13.2, 79169.0], [13.3, 79169.0], [13.4, 79169.0], [13.5, 79226.0], [13.6, 79226.0], [13.7, 79226.0], [13.8, 79226.0], [13.9, 79226.0], [14.0, 79407.0], [14.1, 79407.0], [14.2, 79407.0], [14.3, 79407.0], [14.4, 79407.0], [14.5, 79599.0], [14.6, 79599.0], [14.7, 79599.0], [14.8, 79599.0], [14.9, 79599.0], [15.0, 79654.0], [15.1, 79654.0], [15.2, 79654.0], [15.3, 79654.0], [15.4, 79654.0], [15.5, 79676.0], [15.6, 79676.0], [15.7, 79676.0], [15.8, 79676.0], [15.9, 79676.0], [16.0, 80002.0], [16.1, 80002.0], [16.2, 80002.0], [16.3, 80002.0], [16.4, 80002.0], [16.5, 80113.0], [16.6, 80113.0], [16.7, 80113.0], [16.8, 80113.0], [16.9, 80113.0], [17.0, 80373.0], [17.1, 80373.0], [17.2, 80373.0], [17.3, 80373.0], [17.4, 80373.0], [17.5, 80435.0], [17.6, 80435.0], [17.7, 80435.0], [17.8, 80435.0], [17.9, 80435.0], [18.0, 80808.0], [18.1, 80808.0], [18.2, 80808.0], [18.3, 80808.0], [18.4, 80808.0], [18.5, 81032.0], [18.6, 81032.0], [18.7, 81032.0], [18.8, 81032.0], [18.9, 81032.0], [19.0, 81171.0], [19.1, 81171.0], [19.2, 81171.0], [19.3, 81171.0], [19.4, 81171.0], [19.5, 81609.0], [19.6, 81609.0], [19.7, 81609.0], [19.8, 81609.0], [19.9, 81609.0], [20.0, 81674.0], [20.1, 81674.0], [20.2, 81674.0], [20.3, 81674.0], [20.4, 81674.0], [20.5, 81838.0], [20.6, 81838.0], [20.7, 81838.0], [20.8, 81838.0], [20.9, 81838.0], [21.0, 81927.0], [21.1, 81927.0], [21.2, 81927.0], [21.3, 81927.0], [21.4, 81927.0], [21.5, 82235.0], [21.6, 82235.0], [21.7, 82235.0], [21.8, 82235.0], [21.9, 82235.0], [22.0, 82746.0], [22.1, 82746.0], [22.2, 82746.0], [22.3, 82746.0], [22.4, 82746.0], [22.5, 82854.0], [22.6, 82854.0], [22.7, 82854.0], [22.8, 82854.0], [22.9, 82854.0], [23.0, 82877.0], [23.1, 82877.0], [23.2, 82877.0], [23.3, 82877.0], [23.4, 82877.0], [23.5, 83475.0], [23.6, 83475.0], [23.7, 83475.0], [23.8, 83475.0], [23.9, 83475.0], [24.0, 84527.0], [24.1, 84527.0], [24.2, 84527.0], [24.3, 84527.0], [24.4, 84527.0], [24.5, 84640.0], [24.6, 84640.0], [24.7, 84640.0], [24.8, 84640.0], [24.9, 84640.0], [25.0, 84688.0], [25.1, 84688.0], [25.2, 84688.0], [25.3, 84688.0], [25.4, 84688.0], [25.5, 84971.0], [25.6, 84971.0], [25.7, 84971.0], [25.8, 84971.0], [25.9, 84971.0], [26.0, 85267.0], [26.1, 85267.0], [26.2, 85267.0], [26.3, 85267.0], [26.4, 85267.0], [26.5, 85452.0], [26.6, 85452.0], [26.7, 85452.0], [26.8, 85452.0], [26.9, 85452.0], [27.0, 85465.0], [27.1, 85465.0], [27.2, 85465.0], [27.3, 85465.0], [27.4, 85465.0], [27.5, 85932.0], [27.6, 85932.0], [27.7, 85932.0], [27.8, 85932.0], [27.9, 85932.0], [28.0, 85960.0], [28.1, 85960.0], [28.2, 85960.0], [28.3, 85960.0], [28.4, 85960.0], [28.5, 85965.0], [28.6, 85965.0], [28.7, 85965.0], [28.8, 85965.0], [28.9, 85965.0], [29.0, 86207.0], [29.1, 86207.0], [29.2, 86207.0], [29.3, 86207.0], [29.4, 86207.0], [29.5, 86630.0], [29.6, 86630.0], [29.7, 86630.0], [29.8, 86630.0], [29.9, 86630.0], [30.0, 86756.0], [30.1, 86756.0], [30.2, 86756.0], [30.3, 86756.0], [30.4, 86756.0], [30.5, 86849.0], [30.6, 86849.0], [30.7, 86849.0], [30.8, 86849.0], [30.9, 86849.0], [31.0, 87000.0], [31.1, 87000.0], [31.2, 87000.0], [31.3, 87000.0], [31.4, 87000.0], [31.5, 87076.0], [31.6, 87076.0], [31.7, 87076.0], [31.8, 87076.0], [31.9, 87076.0], [32.0, 87102.0], [32.1, 87102.0], [32.2, 87102.0], [32.3, 87102.0], [32.4, 87102.0], [32.5, 87102.0], [32.6, 87102.0], [32.7, 87102.0], [32.8, 87102.0], [32.9, 87102.0], [33.0, 87171.0], [33.1, 87171.0], [33.2, 87171.0], [33.3, 87171.0], [33.4, 87171.0], [33.5, 87248.0], [33.6, 87248.0], [33.7, 87248.0], [33.8, 87248.0], [33.9, 87248.0], [34.0, 87278.0], [34.1, 87278.0], [34.2, 87278.0], [34.3, 87278.0], [34.4, 87278.0], [34.5, 87281.0], [34.6, 87281.0], [34.7, 87281.0], [34.8, 87281.0], [34.9, 87281.0], [35.0, 87300.0], [35.1, 87300.0], [35.2, 87300.0], [35.3, 87300.0], [35.4, 87300.0], [35.5, 87342.0], [35.6, 87342.0], [35.7, 87342.0], [35.8, 87342.0], [35.9, 87342.0], [36.0, 87623.0], [36.1, 87623.0], [36.2, 87623.0], [36.3, 87623.0], [36.4, 87623.0], [36.5, 87633.0], [36.6, 87633.0], [36.7, 87633.0], [36.8, 87633.0], [36.9, 87633.0], [37.0, 87670.0], [37.1, 87670.0], [37.2, 87670.0], [37.3, 87670.0], [37.4, 87670.0], [37.5, 87975.0], [37.6, 87975.0], [37.7, 87975.0], [37.8, 87975.0], [37.9, 87975.0], [38.0, 88065.0], [38.1, 88065.0], [38.2, 88065.0], [38.3, 88065.0], [38.4, 88065.0], [38.5, 88187.0], [38.6, 88187.0], [38.7, 88187.0], [38.8, 88187.0], [38.9, 88187.0], [39.0, 88286.0], [39.1, 88286.0], [39.2, 88286.0], [39.3, 88286.0], [39.4, 88286.0], [39.5, 88301.0], [39.6, 88301.0], [39.7, 88301.0], [39.8, 88301.0], [39.9, 88301.0], [40.0, 88395.0], [40.1, 88395.0], [40.2, 88395.0], [40.3, 88395.0], [40.4, 88395.0], [40.5, 88557.0], [40.6, 88557.0], [40.7, 88557.0], [40.8, 88557.0], [40.9, 88557.0], [41.0, 88658.0], [41.1, 88658.0], [41.2, 88658.0], [41.3, 88658.0], [41.4, 88658.0], [41.5, 88659.0], [41.6, 88659.0], [41.7, 88659.0], [41.8, 88659.0], [41.9, 88659.0], [42.0, 88848.0], [42.1, 88848.0], [42.2, 88848.0], [42.3, 88848.0], [42.4, 88848.0], [42.5, 88921.0], [42.6, 88921.0], [42.7, 88921.0], [42.8, 88921.0], [42.9, 88921.0], [43.0, 89022.0], [43.1, 89022.0], [43.2, 89022.0], [43.3, 89022.0], [43.4, 89022.0], [43.5, 89073.0], [43.6, 89073.0], [43.7, 89073.0], [43.8, 89073.0], [43.9, 89073.0], [44.0, 89113.0], [44.1, 89113.0], [44.2, 89113.0], [44.3, 89113.0], [44.4, 89113.0], [44.5, 89126.0], [44.6, 89126.0], [44.7, 89126.0], [44.8, 89126.0], [44.9, 89126.0], [45.0, 89182.0], [45.1, 89182.0], [45.2, 89182.0], [45.3, 89182.0], [45.4, 89182.0], [45.5, 89439.0], [45.6, 89439.0], [45.7, 89439.0], [45.8, 89439.0], [45.9, 89439.0], [46.0, 89570.0], [46.1, 89570.0], [46.2, 89570.0], [46.3, 89570.0], [46.4, 89570.0], [46.5, 89571.0], [46.6, 89571.0], [46.7, 89571.0], [46.8, 89571.0], [46.9, 89571.0], [47.0, 89925.0], [47.1, 89925.0], [47.2, 89925.0], [47.3, 89925.0], [47.4, 89925.0], [47.5, 89940.0], [47.6, 89940.0], [47.7, 89940.0], [47.8, 89940.0], [47.9, 89940.0], [48.0, 90139.0], [48.1, 90139.0], [48.2, 90139.0], [48.3, 90139.0], [48.4, 90139.0], [48.5, 90181.0], [48.6, 90181.0], [48.7, 90181.0], [48.8, 90181.0], [48.9, 90181.0], [49.0, 90253.0], [49.1, 90253.0], [49.2, 90253.0], [49.3, 90253.0], [49.4, 90253.0], [49.5, 90276.0], [49.6, 90276.0], [49.7, 90276.0], [49.8, 90276.0], [49.9, 90276.0], [50.0, 90278.0], [50.1, 90278.0], [50.2, 90278.0], [50.3, 90278.0], [50.4, 90278.0], [50.5, 90525.0], [50.6, 90525.0], [50.7, 90525.0], [50.8, 90525.0], [50.9, 90525.0], [51.0, 90919.0], [51.1, 90919.0], [51.2, 90919.0], [51.3, 90919.0], [51.4, 90919.0], [51.5, 90970.0], [51.6, 90970.0], [51.7, 90970.0], [51.8, 90970.0], [51.9, 90970.0], [52.0, 91118.0], [52.1, 91118.0], [52.2, 91118.0], [52.3, 91118.0], [52.4, 91118.0], [52.5, 91289.0], [52.6, 91289.0], [52.7, 91289.0], [52.8, 91289.0], [52.9, 91289.0], [53.0, 91321.0], [53.1, 91321.0], [53.2, 91321.0], [53.3, 91321.0], [53.4, 91321.0], [53.5, 91363.0], [53.6, 91363.0], [53.7, 91363.0], [53.8, 91363.0], [53.9, 91363.0], [54.0, 91635.0], [54.1, 91635.0], [54.2, 91635.0], [54.3, 91635.0], [54.4, 91635.0], [54.5, 91655.0], [54.6, 91655.0], [54.7, 91655.0], [54.8, 91655.0], [54.9, 91655.0], [55.0, 91714.0], [55.1, 91714.0], [55.2, 91714.0], [55.3, 91714.0], [55.4, 91714.0], [55.5, 91727.0], [55.6, 91727.0], [55.7, 91727.0], [55.8, 91727.0], [55.9, 91727.0], [56.0, 91799.0], [56.1, 91799.0], [56.2, 91799.0], [56.3, 91799.0], [56.4, 91799.0], [56.5, 91799.0], [56.6, 91799.0], [56.7, 91799.0], [56.8, 91799.0], [56.9, 91799.0], [57.0, 91817.0], [57.1, 91817.0], [57.2, 91817.0], [57.3, 91817.0], [57.4, 91817.0], [57.5, 91991.0], [57.6, 91991.0], [57.7, 91991.0], [57.8, 91991.0], [57.9, 91991.0], [58.0, 92033.0], [58.1, 92033.0], [58.2, 92033.0], [58.3, 92033.0], [58.4, 92033.0], [58.5, 92123.0], [58.6, 92123.0], [58.7, 92123.0], [58.8, 92123.0], [58.9, 92123.0], [59.0, 92179.0], [59.1, 92179.0], [59.2, 92179.0], [59.3, 92179.0], [59.4, 92179.0], [59.5, 92189.0], [59.6, 92189.0], [59.7, 92189.0], [59.8, 92189.0], [59.9, 92189.0], [60.0, 92305.0], [60.1, 92305.0], [60.2, 92305.0], [60.3, 92305.0], [60.4, 92305.0], [60.5, 92311.0], [60.6, 92311.0], [60.7, 92311.0], [60.8, 92311.0], [60.9, 92311.0], [61.0, 92402.0], [61.1, 92402.0], [61.2, 92402.0], [61.3, 92402.0], [61.4, 92402.0], [61.5, 92479.0], [61.6, 92479.0], [61.7, 92479.0], [61.8, 92479.0], [61.9, 92479.0], [62.0, 93003.0], [62.1, 93003.0], [62.2, 93003.0], [62.3, 93003.0], [62.4, 93003.0], [62.5, 93787.0], [62.6, 93787.0], [62.7, 93787.0], [62.8, 93787.0], [62.9, 93787.0], [63.0, 93939.0], [63.1, 93939.0], [63.2, 93939.0], [63.3, 93939.0], [63.4, 93939.0], [63.5, 94056.0], [63.6, 94056.0], [63.7, 94056.0], [63.8, 94056.0], [63.9, 94056.0], [64.0, 94278.0], [64.1, 94278.0], [64.2, 94278.0], [64.3, 94278.0], [64.4, 94278.0], [64.5, 94382.0], [64.6, 94382.0], [64.7, 94382.0], [64.8, 94382.0], [64.9, 94382.0], [65.0, 94431.0], [65.1, 94431.0], [65.2, 94431.0], [65.3, 94431.0], [65.4, 94431.0], [65.5, 94507.0], [65.6, 94507.0], [65.7, 94507.0], [65.8, 94507.0], [65.9, 94507.0], [66.0, 94585.0], [66.1, 94585.0], [66.2, 94585.0], [66.3, 94585.0], [66.4, 94585.0], [66.5, 94781.0], [66.6, 94781.0], [66.7, 94781.0], [66.8, 94781.0], [66.9, 94781.0], [67.0, 94804.0], [67.1, 94804.0], [67.2, 94804.0], [67.3, 94804.0], [67.4, 94804.0], [67.5, 94820.0], [67.6, 94820.0], [67.7, 94820.0], [67.8, 94820.0], [67.9, 94820.0], [68.0, 94871.0], [68.1, 94871.0], [68.2, 94871.0], [68.3, 94871.0], [68.4, 94871.0], [68.5, 94912.0], [68.6, 94912.0], [68.7, 94912.0], [68.8, 94912.0], [68.9, 94912.0], [69.0, 95528.0], [69.1, 95528.0], [69.2, 95528.0], [69.3, 95528.0], [69.4, 95528.0], [69.5, 96507.0], [69.6, 96507.0], [69.7, 96507.0], [69.8, 96507.0], [69.9, 96507.0], [70.0, 96890.0], [70.1, 96890.0], [70.2, 96890.0], [70.3, 96890.0], [70.4, 96890.0], [70.5, 97594.0], [70.6, 97594.0], [70.7, 97594.0], [70.8, 97594.0], [70.9, 97594.0], [71.0, 99725.0], [71.1, 99725.0], [71.2, 99725.0], [71.3, 99725.0], [71.4, 99725.0], [71.5, 102184.0], [71.6, 102184.0], [71.7, 102184.0], [71.8, 102184.0], [71.9, 102184.0], [72.0, 102192.0], [72.1, 102192.0], [72.2, 102192.0], [72.3, 102192.0], [72.4, 102192.0], [72.5, 103146.0], [72.6, 103146.0], [72.7, 103146.0], [72.8, 103146.0], [72.9, 103146.0], [73.0, 103363.0], [73.1, 103363.0], [73.2, 103363.0], [73.3, 103363.0], [73.4, 103363.0], [73.5, 103700.0], [73.6, 103700.0], [73.7, 103700.0], [73.8, 103700.0], [73.9, 103700.0], [74.0, 105020.0], [74.1, 105020.0], [74.2, 105020.0], [74.3, 105020.0], [74.4, 105020.0], [74.5, 105063.0], [74.6, 105063.0], [74.7, 105063.0], [74.8, 105063.0], [74.9, 105063.0], [75.0, 105218.0], [75.1, 105218.0], [75.2, 105218.0], [75.3, 105218.0], [75.4, 105218.0], [75.5, 105383.0], [75.6, 105383.0], [75.7, 105383.0], [75.8, 105383.0], [75.9, 105383.0], [76.0, 105595.0], [76.1, 105595.0], [76.2, 105595.0], [76.3, 105595.0], [76.4, 105595.0], [76.5, 105742.0], [76.6, 105742.0], [76.7, 105742.0], [76.8, 105742.0], [76.9, 105742.0], [77.0, 105920.0], [77.1, 105920.0], [77.2, 105920.0], [77.3, 105920.0], [77.4, 105920.0], [77.5, 106006.0], [77.6, 106006.0], [77.7, 106006.0], [77.8, 106006.0], [77.9, 106006.0], [78.0, 106807.0], [78.1, 106807.0], [78.2, 106807.0], [78.3, 106807.0], [78.4, 106807.0], [78.5, 108268.0], [78.6, 108268.0], [78.7, 108268.0], [78.8, 108268.0], [78.9, 108268.0], [79.0, 109401.0], [79.1, 109401.0], [79.2, 109401.0], [79.3, 109401.0], [79.4, 109401.0], [79.5, 109888.0], [79.6, 109888.0], [79.7, 109888.0], [79.8, 109888.0], [79.9, 109888.0], [80.0, 112068.0], [80.1, 112068.0], [80.2, 112068.0], [80.3, 112068.0], [80.4, 112068.0], [80.5, 112076.0], [80.6, 112076.0], [80.7, 112076.0], [80.8, 112076.0], [80.9, 112076.0], [81.0, 113131.0], [81.1, 113131.0], [81.2, 113131.0], [81.3, 113131.0], [81.4, 113131.0], [81.5, 113359.0], [81.6, 113359.0], [81.7, 113359.0], [81.8, 113359.0], [81.9, 113359.0], [82.0, 114411.0], [82.1, 114411.0], [82.2, 114411.0], [82.3, 114411.0], [82.4, 114411.0], [82.5, 114482.0], [82.6, 114482.0], [82.7, 114482.0], [82.8, 114482.0], [82.9, 114482.0], [83.0, 114670.0], [83.1, 114670.0], [83.2, 114670.0], [83.3, 114670.0], [83.4, 114670.0], [83.5, 115732.0], [83.6, 115732.0], [83.7, 115732.0], [83.8, 115732.0], [83.9, 115732.0], [84.0, 115827.0], [84.1, 115827.0], [84.2, 115827.0], [84.3, 115827.0], [84.4, 115827.0], [84.5, 116613.0], [84.6, 116613.0], [84.7, 116613.0], [84.8, 116613.0], [84.9, 116613.0], [85.0, 117502.0], [85.1, 117502.0], [85.2, 117502.0], [85.3, 117502.0], [85.4, 117502.0], [85.5, 117629.0], [85.6, 117629.0], [85.7, 117629.0], [85.8, 117629.0], [85.9, 117629.0], [86.0, 117681.0], [86.1, 117681.0], [86.2, 117681.0], [86.3, 117681.0], [86.4, 117681.0], [86.5, 117894.0], [86.6, 117894.0], [86.7, 117894.0], [86.8, 117894.0], [86.9, 117894.0], [87.0, 117950.0], [87.1, 117950.0], [87.2, 117950.0], [87.3, 117950.0], [87.4, 117950.0], [87.5, 118368.0], [87.6, 118368.0], [87.7, 118368.0], [87.8, 118368.0], [87.9, 118368.0], [88.0, 118566.0], [88.1, 118566.0], [88.2, 118566.0], [88.3, 118566.0], [88.4, 118566.0], [88.5, 118622.0], [88.6, 118622.0], [88.7, 118622.0], [88.8, 118622.0], [88.9, 118622.0], [89.0, 118717.0], [89.1, 118717.0], [89.2, 118717.0], [89.3, 118717.0], [89.4, 118717.0], [89.5, 118981.0], [89.6, 118981.0], [89.7, 118981.0], [89.8, 118981.0], [89.9, 118981.0], [90.0, 119087.0], [90.1, 119087.0], [90.2, 119087.0], [90.3, 119087.0], [90.4, 119087.0], [90.5, 119166.0], [90.6, 119166.0], [90.7, 119166.0], [90.8, 119166.0], [90.9, 119166.0], [91.0, 119186.0], [91.1, 119186.0], [91.2, 119186.0], [91.3, 119186.0], [91.4, 119186.0], [91.5, 119204.0], [91.6, 119204.0], [91.7, 119204.0], [91.8, 119204.0], [91.9, 119204.0], [92.0, 119209.0], [92.1, 119209.0], [92.2, 119209.0], [92.3, 119209.0], [92.4, 119209.0], [92.5, 119433.0], [92.6, 119433.0], [92.7, 119433.0], [92.8, 119433.0], [92.9, 119433.0], [93.0, 119618.0], [93.1, 119618.0], [93.2, 119618.0], [93.3, 119618.0], [93.4, 119618.0], [93.5, 119691.0], [93.6, 119691.0], [93.7, 119691.0], [93.8, 119691.0], [93.9, 119691.0], [94.0, 119755.0], [94.1, 119755.0], [94.2, 119755.0], [94.3, 119755.0], [94.4, 119755.0], [94.5, 120005.0], [94.6, 120005.0], [94.7, 120005.0], [94.8, 120005.0], [94.9, 120005.0], [95.0, 120120.0], [95.1, 120120.0], [95.2, 120120.0], [95.3, 120120.0], [95.4, 120120.0], [95.5, 120245.0], [95.6, 120245.0], [95.7, 120245.0], [95.8, 120245.0], [95.9, 120245.0], [96.0, 120343.0], [96.1, 120343.0], [96.2, 120343.0], [96.3, 120343.0], [96.4, 120343.0], [96.5, 120461.0], [96.6, 120461.0], [96.7, 120461.0], [96.8, 120461.0], [96.9, 120461.0], [97.0, 120514.0], [97.1, 120514.0], [97.2, 120514.0], [97.3, 120514.0], [97.4, 120514.0], [97.5, 120608.0], [97.6, 120608.0], [97.7, 120608.0], [97.8, 120608.0], [97.9, 120608.0], [98.0, 120779.0], [98.1, 120779.0], [98.2, 120779.0], [98.3, 120779.0], [98.4, 120779.0], [98.5, 121359.0], [98.6, 121359.0], [98.7, 121359.0], [98.8, 121359.0], [98.9, 121359.0], [99.0, 121686.0], [99.1, 121686.0], [99.2, 121686.0], [99.3, 121686.0], [99.4, 121686.0], [99.5, 121992.0], [99.6, 121992.0], [99.7, 121992.0], [99.8, 121992.0], [99.9, 121992.0]], "isOverall": false, "label": "Generate Cheep", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 4.0], [0.3, 4.0], [0.4, 4.0], [0.5, 35407.0], [0.6, 35407.0], [0.7, 35407.0], [0.8, 35407.0], [0.9, 35407.0], [1.0, 36077.0], [1.1, 36077.0], [1.2, 36077.0], [1.3, 36077.0], [1.4, 36077.0], [1.5, 88916.0], [1.6, 88916.0], [1.7, 88916.0], [1.8, 88916.0], [1.9, 88916.0], [2.0, 111753.0], [2.1, 111753.0], [2.2, 111753.0], [2.3, 111753.0], [2.4, 111753.0], [2.5, 111840.0], [2.6, 111840.0], [2.7, 111840.0], [2.8, 111840.0], [2.9, 111840.0], [3.0, 112121.0], [3.1, 112121.0], [3.2, 112121.0], [3.3, 112121.0], [3.4, 112121.0], [3.5, 112195.0], [3.6, 112195.0], [3.7, 112195.0], [3.8, 112195.0], [3.9, 112195.0], [4.0, 112386.0], [4.1, 112386.0], [4.2, 112386.0], [4.3, 112386.0], [4.4, 112386.0], [4.5, 112506.0], [4.6, 112506.0], [4.7, 112506.0], [4.8, 112506.0], [4.9, 112506.0], [5.0, 112567.0], [5.1, 112567.0], [5.2, 112567.0], [5.3, 112567.0], [5.4, 112567.0], [5.5, 112971.0], [5.6, 112971.0], [5.7, 112971.0], [5.8, 112971.0], [5.9, 112971.0], [6.0, 112998.0], [6.1, 112998.0], [6.2, 112998.0], [6.3, 112998.0], [6.4, 112998.0], [6.5, 113022.0], [6.6, 113022.0], [6.7, 113022.0], [6.8, 113022.0], [6.9, 113022.0], [7.0, 113064.0], [7.1, 113064.0], [7.2, 113064.0], [7.3, 113064.0], [7.4, 113064.0], [7.5, 113120.0], [7.6, 113120.0], [7.7, 113120.0], [7.8, 113120.0], [7.9, 113120.0], [8.0, 113129.0], [8.1, 113129.0], [8.2, 113129.0], [8.3, 113129.0], [8.4, 113129.0], [8.5, 113141.0], [8.6, 113141.0], [8.7, 113141.0], [8.8, 113141.0], [8.9, 113141.0], [9.0, 113178.0], [9.1, 113178.0], [9.2, 113178.0], [9.3, 113178.0], [9.4, 113178.0], [9.5, 113193.0], [9.6, 113193.0], [9.7, 113193.0], [9.8, 113193.0], [9.9, 113193.0], [10.0, 113446.0], [10.1, 113446.0], [10.2, 113446.0], [10.3, 113446.0], [10.4, 113446.0], [10.5, 113483.0], [10.6, 113483.0], [10.7, 113483.0], [10.8, 113483.0], [10.9, 113483.0], [11.0, 113577.0], [11.1, 113577.0], [11.2, 113577.0], [11.3, 113577.0], [11.4, 113577.0], [11.5, 113807.0], [11.6, 113807.0], [11.7, 113807.0], [11.8, 113807.0], [11.9, 113807.0], [12.0, 113813.0], [12.1, 113813.0], [12.2, 113813.0], [12.3, 113813.0], [12.4, 113813.0], [12.5, 114147.0], [12.6, 114147.0], [12.7, 114147.0], [12.8, 114147.0], [12.9, 114147.0], [13.0, 114168.0], [13.1, 114168.0], [13.2, 114168.0], [13.3, 114168.0], [13.4, 114168.0], [13.5, 114237.0], [13.6, 114237.0], [13.7, 114237.0], [13.8, 114237.0], [13.9, 114237.0], [14.0, 114317.0], [14.1, 114317.0], [14.2, 114317.0], [14.3, 114317.0], [14.4, 114317.0], [14.5, 114367.0], [14.6, 114367.0], [14.7, 114367.0], [14.8, 114367.0], [14.9, 114367.0], [15.0, 114368.0], [15.1, 114368.0], [15.2, 114368.0], [15.3, 114368.0], [15.4, 114368.0], [15.5, 114521.0], [15.6, 114521.0], [15.7, 114521.0], [15.8, 114521.0], [15.9, 114521.0], [16.0, 114718.0], [16.1, 114718.0], [16.2, 114718.0], [16.3, 114718.0], [16.4, 114718.0], [16.5, 114727.0], [16.6, 114727.0], [16.7, 114727.0], [16.8, 114727.0], [16.9, 114727.0], [17.0, 114762.0], [17.1, 114762.0], [17.2, 114762.0], [17.3, 114762.0], [17.4, 114762.0], [17.5, 114875.0], [17.6, 114875.0], [17.7, 114875.0], [17.8, 114875.0], [17.9, 114875.0], [18.0, 114896.0], [18.1, 114896.0], [18.2, 114896.0], [18.3, 114896.0], [18.4, 114896.0], [18.5, 114913.0], [18.6, 114913.0], [18.7, 114913.0], [18.8, 114913.0], [18.9, 114913.0], [19.0, 115103.0], [19.1, 115103.0], [19.2, 115103.0], [19.3, 115103.0], [19.4, 115103.0], [19.5, 115209.0], [19.6, 115209.0], [19.7, 115209.0], [19.8, 115209.0], [19.9, 115209.0], [20.0, 115246.0], [20.1, 115246.0], [20.2, 115246.0], [20.3, 115246.0], [20.4, 115246.0], [20.5, 115268.0], [20.6, 115268.0], [20.7, 115268.0], [20.8, 115268.0], [20.9, 115268.0], [21.0, 115320.0], [21.1, 115320.0], [21.2, 115320.0], [21.3, 115320.0], [21.4, 115320.0], [21.5, 115335.0], [21.6, 115335.0], [21.7, 115335.0], [21.8, 115335.0], [21.9, 115335.0], [22.0, 115387.0], [22.1, 115387.0], [22.2, 115387.0], [22.3, 115387.0], [22.4, 115387.0], [22.5, 115437.0], [22.6, 115437.0], [22.7, 115437.0], [22.8, 115437.0], [22.9, 115437.0], [23.0, 115456.0], [23.1, 115456.0], [23.2, 115456.0], [23.3, 115456.0], [23.4, 115456.0], [23.5, 115550.0], [23.6, 115550.0], [23.7, 115550.0], [23.8, 115550.0], [23.9, 115550.0], [24.0, 115558.0], [24.1, 115558.0], [24.2, 115558.0], [24.3, 115558.0], [24.4, 115558.0], [24.5, 115560.0], [24.6, 115560.0], [24.7, 115560.0], [24.8, 115560.0], [24.9, 115560.0], [25.0, 115581.0], [25.1, 115581.0], [25.2, 115581.0], [25.3, 115581.0], [25.4, 115581.0], [25.5, 115586.0], [25.6, 115586.0], [25.7, 115586.0], [25.8, 115586.0], [25.9, 115586.0], [26.0, 115590.0], [26.1, 115590.0], [26.2, 115590.0], [26.3, 115590.0], [26.4, 115590.0], [26.5, 115601.0], [26.6, 115601.0], [26.7, 115601.0], [26.8, 115601.0], [26.9, 115601.0], [27.0, 115657.0], [27.1, 115657.0], [27.2, 115657.0], [27.3, 115657.0], [27.4, 115657.0], [27.5, 115675.0], [27.6, 115675.0], [27.7, 115675.0], [27.8, 115675.0], [27.9, 115675.0], [28.0, 115686.0], [28.1, 115686.0], [28.2, 115686.0], [28.3, 115686.0], [28.4, 115686.0], [28.5, 115747.0], [28.6, 115747.0], [28.7, 115747.0], [28.8, 115747.0], [28.9, 115747.0], [29.0, 115801.0], [29.1, 115801.0], [29.2, 115801.0], [29.3, 115801.0], [29.4, 115801.0], [29.5, 115823.0], [29.6, 115823.0], [29.7, 115823.0], [29.8, 115823.0], [29.9, 115823.0], [30.0, 115901.0], [30.1, 115901.0], [30.2, 115901.0], [30.3, 115901.0], [30.4, 115901.0], [30.5, 116171.0], [30.6, 116171.0], [30.7, 116171.0], [30.8, 116171.0], [30.9, 116171.0], [31.0, 116609.0], [31.1, 116609.0], [31.2, 116609.0], [31.3, 116609.0], [31.4, 116609.0], [31.5, 116894.0], [31.6, 116894.0], [31.7, 116894.0], [31.8, 116894.0], [31.9, 116894.0], [32.0, 116926.0], [32.1, 116926.0], [32.2, 116926.0], [32.3, 116926.0], [32.4, 116926.0], [32.5, 116928.0], [32.6, 116928.0], [32.7, 116928.0], [32.8, 116928.0], [32.9, 116928.0], [33.0, 117103.0], [33.1, 117103.0], [33.2, 117103.0], [33.3, 117103.0], [33.4, 117103.0], [33.5, 117174.0], [33.6, 117174.0], [33.7, 117174.0], [33.8, 117174.0], [33.9, 117174.0], [34.0, 117193.0], [34.1, 117193.0], [34.2, 117193.0], [34.3, 117193.0], [34.4, 117193.0], [34.5, 117248.0], [34.6, 117248.0], [34.7, 117248.0], [34.8, 117248.0], [34.9, 117248.0], [35.0, 117282.0], [35.1, 117282.0], [35.2, 117282.0], [35.3, 117282.0], [35.4, 117282.0], [35.5, 117463.0], [35.6, 117463.0], [35.7, 117463.0], [35.8, 117463.0], [35.9, 117463.0], [36.0, 117509.0], [36.1, 117509.0], [36.2, 117509.0], [36.3, 117509.0], [36.4, 117509.0], [36.5, 117516.0], [36.6, 117516.0], [36.7, 117516.0], [36.8, 117516.0], [36.9, 117516.0], [37.0, 117567.0], [37.1, 117567.0], [37.2, 117567.0], [37.3, 117567.0], [37.4, 117567.0], [37.5, 117680.0], [37.6, 117680.0], [37.7, 117680.0], [37.8, 117680.0], [37.9, 117680.0], [38.0, 117764.0], [38.1, 117764.0], [38.2, 117764.0], [38.3, 117764.0], [38.4, 117764.0], [38.5, 117773.0], [38.6, 117773.0], [38.7, 117773.0], [38.8, 117773.0], [38.9, 117773.0], [39.0, 117869.0], [39.1, 117869.0], [39.2, 117869.0], [39.3, 117869.0], [39.4, 117869.0], [39.5, 117881.0], [39.6, 117881.0], [39.7, 117881.0], [39.8, 117881.0], [39.9, 117881.0], [40.0, 117952.0], [40.1, 117952.0], [40.2, 117952.0], [40.3, 117952.0], [40.4, 117952.0], [40.5, 117994.0], [40.6, 117994.0], [40.7, 117994.0], [40.8, 117994.0], [40.9, 117994.0], [41.0, 117998.0], [41.1, 117998.0], [41.2, 117998.0], [41.3, 117998.0], [41.4, 117998.0], [41.5, 117999.0], [41.6, 117999.0], [41.7, 117999.0], [41.8, 117999.0], [41.9, 117999.0], [42.0, 118103.0], [42.1, 118103.0], [42.2, 118103.0], [42.3, 118103.0], [42.4, 118103.0], [42.5, 118132.0], [42.6, 118132.0], [42.7, 118132.0], [42.8, 118132.0], [42.9, 118132.0], [43.0, 118134.0], [43.1, 118134.0], [43.2, 118134.0], [43.3, 118134.0], [43.4, 118134.0], [43.5, 118149.0], [43.6, 118149.0], [43.7, 118149.0], [43.8, 118149.0], [43.9, 118149.0], [44.0, 118172.0], [44.1, 118172.0], [44.2, 118172.0], [44.3, 118172.0], [44.4, 118172.0], [44.5, 118193.0], [44.6, 118193.0], [44.7, 118193.0], [44.8, 118193.0], [44.9, 118193.0], [45.0, 118198.0], [45.1, 118198.0], [45.2, 118198.0], [45.3, 118198.0], [45.4, 118198.0], [45.5, 118400.0], [45.6, 118400.0], [45.7, 118400.0], [45.8, 118400.0], [45.9, 118400.0], [46.0, 118467.0], [46.1, 118467.0], [46.2, 118467.0], [46.3, 118467.0], [46.4, 118467.0], [46.5, 118490.0], [46.6, 118490.0], [46.7, 118490.0], [46.8, 118490.0], [46.9, 118490.0], [47.0, 118605.0], [47.1, 118605.0], [47.2, 118605.0], [47.3, 118605.0], [47.4, 118605.0], [47.5, 118742.0], [47.6, 118742.0], [47.7, 118742.0], [47.8, 118742.0], [47.9, 118742.0], [48.0, 118768.0], [48.1, 118768.0], [48.2, 118768.0], [48.3, 118768.0], [48.4, 118768.0], [48.5, 118771.0], [48.6, 118771.0], [48.7, 118771.0], [48.8, 118771.0], [48.9, 118771.0], [49.0, 118916.0], [49.1, 118916.0], [49.2, 118916.0], [49.3, 118916.0], [49.4, 118916.0], [49.5, 118921.0], [49.6, 118921.0], [49.7, 118921.0], [49.8, 118921.0], [49.9, 118921.0], [50.0, 118922.0], [50.1, 118922.0], [50.2, 118922.0], [50.3, 118922.0], [50.4, 118922.0], [50.5, 119025.0], [50.6, 119025.0], [50.7, 119025.0], [50.8, 119025.0], [50.9, 119025.0], [51.0, 119042.0], [51.1, 119042.0], [51.2, 119042.0], [51.3, 119042.0], [51.4, 119042.0], [51.5, 119128.0], [51.6, 119128.0], [51.7, 119128.0], [51.8, 119128.0], [51.9, 119128.0], [52.0, 119133.0], [52.1, 119133.0], [52.2, 119133.0], [52.3, 119133.0], [52.4, 119133.0], [52.5, 119164.0], [52.6, 119164.0], [52.7, 119164.0], [52.8, 119164.0], [52.9, 119164.0], [53.0, 119197.0], [53.1, 119197.0], [53.2, 119197.0], [53.3, 119197.0], [53.4, 119197.0], [53.5, 119233.0], [53.6, 119233.0], [53.7, 119233.0], [53.8, 119233.0], [53.9, 119233.0], [54.0, 119255.0], [54.1, 119255.0], [54.2, 119255.0], [54.3, 119255.0], [54.4, 119255.0], [54.5, 119294.0], [54.6, 119294.0], [54.7, 119294.0], [54.8, 119294.0], [54.9, 119294.0], [55.0, 119356.0], [55.1, 119356.0], [55.2, 119356.0], [55.3, 119356.0], [55.4, 119356.0], [55.5, 119395.0], [55.6, 119395.0], [55.7, 119395.0], [55.8, 119395.0], [55.9, 119395.0], [56.0, 119396.0], [56.1, 119396.0], [56.2, 119396.0], [56.3, 119396.0], [56.4, 119396.0], [56.5, 119412.0], [56.6, 119412.0], [56.7, 119412.0], [56.8, 119412.0], [56.9, 119412.0], [57.0, 119482.0], [57.1, 119482.0], [57.2, 119482.0], [57.3, 119482.0], [57.4, 119482.0], [57.5, 119498.0], [57.6, 119498.0], [57.7, 119498.0], [57.8, 119498.0], [57.9, 119498.0], [58.0, 119563.0], [58.1, 119563.0], [58.2, 119563.0], [58.3, 119563.0], [58.4, 119563.0], [58.5, 119595.0], [58.6, 119595.0], [58.7, 119595.0], [58.8, 119595.0], [58.9, 119595.0], [59.0, 119627.0], [59.1, 119627.0], [59.2, 119627.0], [59.3, 119627.0], [59.4, 119627.0], [59.5, 119633.0], [59.6, 119633.0], [59.7, 119633.0], [59.8, 119633.0], [59.9, 119633.0], [60.0, 119675.0], [60.1, 119675.0], [60.2, 119675.0], [60.3, 119675.0], [60.4, 119675.0], [60.5, 119722.0], [60.6, 119722.0], [60.7, 119722.0], [60.8, 119722.0], [60.9, 119722.0], [61.0, 119746.0], [61.1, 119746.0], [61.2, 119746.0], [61.3, 119746.0], [61.4, 119746.0], [61.5, 119901.0], [61.6, 119901.0], [61.7, 119901.0], [61.8, 119901.0], [61.9, 119901.0], [62.0, 119933.0], [62.1, 119933.0], [62.2, 119933.0], [62.3, 119933.0], [62.4, 119933.0], [62.5, 120024.0], [62.6, 120024.0], [62.7, 120024.0], [62.8, 120024.0], [62.9, 120024.0], [63.0, 120041.0], [63.1, 120041.0], [63.2, 120041.0], [63.3, 120041.0], [63.4, 120041.0], [63.5, 120046.0], [63.6, 120046.0], [63.7, 120046.0], [63.8, 120046.0], [63.9, 120046.0], [64.0, 120140.0], [64.1, 120140.0], [64.2, 120140.0], [64.3, 120140.0], [64.4, 120140.0], [64.5, 120205.0], [64.6, 120205.0], [64.7, 120205.0], [64.8, 120205.0], [64.9, 120205.0], [65.0, 120220.0], [65.1, 120220.0], [65.2, 120220.0], [65.3, 120220.0], [65.4, 120220.0], [65.5, 120237.0], [65.6, 120237.0], [65.7, 120237.0], [65.8, 120237.0], [65.9, 120237.0], [66.0, 120333.0], [66.1, 120333.0], [66.2, 120333.0], [66.3, 120333.0], [66.4, 120333.0], [66.5, 120358.0], [66.6, 120358.0], [66.7, 120358.0], [66.8, 120358.0], [66.9, 120358.0], [67.0, 120387.0], [67.1, 120387.0], [67.2, 120387.0], [67.3, 120387.0], [67.4, 120387.0], [67.5, 120402.0], [67.6, 120402.0], [67.7, 120402.0], [67.8, 120402.0], [67.9, 120402.0], [68.0, 120498.0], [68.1, 120498.0], [68.2, 120498.0], [68.3, 120498.0], [68.4, 120498.0], [68.5, 120531.0], [68.6, 120531.0], [68.7, 120531.0], [68.8, 120531.0], [68.9, 120531.0], [69.0, 120537.0], [69.1, 120537.0], [69.2, 120537.0], [69.3, 120537.0], [69.4, 120537.0], [69.5, 120658.0], [69.6, 120658.0], [69.7, 120658.0], [69.8, 120658.0], [69.9, 120658.0], [70.0, 120683.0], [70.1, 120683.0], [70.2, 120683.0], [70.3, 120683.0], [70.4, 120683.0], [70.5, 120711.0], [70.6, 120711.0], [70.7, 120711.0], [70.8, 120711.0], [70.9, 120711.0], [71.0, 120727.0], [71.1, 120727.0], [71.2, 120727.0], [71.3, 120727.0], [71.4, 120727.0], [71.5, 120740.0], [71.6, 120740.0], [71.7, 120740.0], [71.8, 120740.0], [71.9, 120740.0], [72.0, 120755.0], [72.1, 120755.0], [72.2, 120755.0], [72.3, 120755.0], [72.4, 120755.0], [72.5, 120831.0], [72.6, 120831.0], [72.7, 120831.0], [72.8, 120831.0], [72.9, 120831.0], [73.0, 120837.0], [73.1, 120837.0], [73.2, 120837.0], [73.3, 120837.0], [73.4, 120837.0], [73.5, 120865.0], [73.6, 120865.0], [73.7, 120865.0], [73.8, 120865.0], [73.9, 120865.0], [74.0, 121024.0], [74.1, 121024.0], [74.2, 121024.0], [74.3, 121024.0], [74.4, 121024.0], [74.5, 121322.0], [74.6, 121322.0], [74.7, 121322.0], [74.8, 121322.0], [74.9, 121322.0], [75.0, 121362.0], [75.1, 121362.0], [75.2, 121362.0], [75.3, 121362.0], [75.4, 121362.0], [75.5, 121558.0], [75.6, 121558.0], [75.7, 121558.0], [75.8, 121558.0], [75.9, 121558.0], [76.0, 121665.0], [76.1, 121665.0], [76.2, 121665.0], [76.3, 121665.0], [76.4, 121665.0], [76.5, 121839.0], [76.6, 121839.0], [76.7, 121839.0], [76.8, 121839.0], [76.9, 121839.0], [77.0, 122081.0], [77.1, 122081.0], [77.2, 122081.0], [77.3, 122081.0], [77.4, 122081.0], [77.5, 122114.0], [77.6, 122114.0], [77.7, 122114.0], [77.8, 122114.0], [77.9, 122114.0], [78.0, 122362.0], [78.1, 122362.0], [78.2, 122362.0], [78.3, 122362.0], [78.4, 122362.0], [78.5, 122646.0], [78.6, 122646.0], [78.7, 122646.0], [78.8, 122646.0], [78.9, 122646.0], [79.0, 122653.0], [79.1, 122653.0], [79.2, 122653.0], [79.3, 122653.0], [79.4, 122653.0], [79.5, 122964.0], [79.6, 122964.0], [79.7, 122964.0], [79.8, 122964.0], [79.9, 122964.0], [80.0, 123182.0], [80.1, 123182.0], [80.2, 123182.0], [80.3, 123182.0], [80.4, 123182.0], [80.5, 123235.0], [80.6, 123235.0], [80.7, 123235.0], [80.8, 123235.0], [80.9, 123235.0], [81.0, 123240.0], [81.1, 123240.0], [81.2, 123240.0], [81.3, 123240.0], [81.4, 123240.0], [81.5, 123552.0], [81.6, 123552.0], [81.7, 123552.0], [81.8, 123552.0], [81.9, 123552.0], [82.0, 124465.0], [82.1, 124465.0], [82.2, 124465.0], [82.3, 124465.0], [82.4, 124465.0], [82.5, 127681.0], [82.6, 127681.0], [82.7, 127681.0], [82.8, 127681.0], [82.9, 127681.0], [83.0, 127951.0], [83.1, 127951.0], [83.2, 127951.0], [83.3, 127951.0], [83.4, 127951.0], [83.5, 129506.0], [83.6, 129506.0], [83.7, 129506.0], [83.8, 129506.0], [83.9, 129506.0], [84.0, 131925.0], [84.1, 131925.0], [84.2, 131925.0], [84.3, 131925.0], [84.4, 131925.0], [84.5, 132474.0], [84.6, 132474.0], [84.7, 132474.0], [84.8, 132474.0], [84.9, 132474.0], [85.0, 133915.0], [85.1, 133915.0], [85.2, 133915.0], [85.3, 133915.0], [85.4, 133915.0], [85.5, 134365.0], [85.6, 134365.0], [85.7, 134365.0], [85.8, 134365.0], [85.9, 134365.0], [86.0, 134544.0], [86.1, 134544.0], [86.2, 134544.0], [86.3, 134544.0], [86.4, 134544.0], [86.5, 134688.0], [86.6, 134688.0], [86.7, 134688.0], [86.8, 134688.0], [86.9, 134688.0], [87.0, 137001.0], [87.1, 137001.0], [87.2, 137001.0], [87.3, 137001.0], [87.4, 137001.0], [87.5, 138229.0], [87.6, 138229.0], [87.7, 138229.0], [87.8, 138229.0], [87.9, 138229.0], [88.0, 138286.0], [88.1, 138286.0], [88.2, 138286.0], [88.3, 138286.0], [88.4, 138286.0], [88.5, 139026.0], [88.6, 139026.0], [88.7, 139026.0], [88.8, 139026.0], [88.9, 139026.0], [89.0, 139676.0], [89.1, 139676.0], [89.2, 139676.0], [89.3, 139676.0], [89.4, 139676.0], [89.5, 140045.0], [89.6, 140045.0], [89.7, 140045.0], [89.8, 140045.0], [89.9, 140045.0], [90.0, 140828.0], [90.1, 140828.0], [90.2, 140828.0], [90.3, 140828.0], [90.4, 140828.0], [90.5, 141048.0], [90.6, 141048.0], [90.7, 141048.0], [90.8, 141048.0], [90.9, 141048.0], [91.0, 141589.0], [91.1, 141589.0], [91.2, 141589.0], [91.3, 141589.0], [91.4, 141589.0], [91.5, 141808.0], [91.6, 141808.0], [91.7, 141808.0], [91.8, 141808.0], [91.9, 141808.0], [92.0, 141922.0], [92.1, 141922.0], [92.2, 141922.0], [92.3, 141922.0], [92.4, 141922.0], [92.5, 141964.0], [92.6, 141964.0], [92.7, 141964.0], [92.8, 141964.0], [92.9, 141964.0], [93.0, 142299.0], [93.1, 142299.0], [93.2, 142299.0], [93.3, 142299.0], [93.4, 142299.0], [93.5, 142404.0], [93.6, 142404.0], [93.7, 142404.0], [93.8, 142404.0], [93.9, 142404.0], [94.0, 142782.0], [94.1, 142782.0], [94.2, 142782.0], [94.3, 142782.0], [94.4, 142782.0], [94.5, 143490.0], [94.6, 143490.0], [94.7, 143490.0], [94.8, 143490.0], [94.9, 143490.0], [95.0, 143895.0], [95.1, 143895.0], [95.2, 143895.0], [95.3, 143895.0], [95.4, 143895.0], [95.5, 145151.0], [95.6, 145151.0], [95.7, 145151.0], [95.8, 145151.0], [95.9, 145151.0], [96.0, 145695.0], [96.1, 145695.0], [96.2, 145695.0], [96.3, 145695.0], [96.4, 145695.0], [96.5, 146347.0], [96.6, 146347.0], [96.7, 146347.0], [96.8, 146347.0], [96.9, 146347.0], [97.0, 146599.0], [97.1, 146599.0], [97.2, 146599.0], [97.3, 146599.0], [97.4, 146599.0], [97.5, 146628.0], [97.6, 146628.0], [97.7, 146628.0], [97.8, 146628.0], [97.9, 146628.0], [98.0, 147201.0], [98.1, 147201.0], [98.2, 147201.0], [98.3, 147201.0], [98.4, 147201.0], [98.5, 147541.0], [98.6, 147541.0], [98.7, 147541.0], [98.8, 147541.0], [98.9, 147541.0], [99.0, 148406.0], [99.1, 148406.0], [99.2, 148406.0], [99.3, 148406.0], [99.4, 148406.0], [99.5, 148525.0], [99.6, 148525.0], [99.7, 148525.0], [99.8, 148525.0], [99.9, 148525.0]], "isOverall": false, "label": "Get Home Page", "isController": false}, {"data": [[0.0, 1271.0], [0.1, 1271.0], [0.2, 1271.0], [0.3, 1271.0], [0.4, 1271.0], [0.5, 2532.0], [0.6, 2532.0], [0.7, 2532.0], [0.8, 2532.0], [0.9, 2532.0], [1.0, 2679.0], [1.1, 2679.0], [1.2, 2679.0], [1.3, 2679.0], [1.4, 2679.0], [1.5, 4311.0], [1.6, 4311.0], [1.7, 4311.0], [1.8, 4311.0], [1.9, 4311.0], [2.0, 5192.0], [2.1, 5192.0], [2.2, 5192.0], [2.3, 5192.0], [2.4, 5192.0], [2.5, 5267.0], [2.6, 5267.0], [2.7, 5267.0], [2.8, 5267.0], [2.9, 5267.0], [3.0, 5809.0], [3.1, 5809.0], [3.2, 5809.0], [3.3, 5809.0], [3.4, 5809.0], [3.5, 6777.0], [3.6, 6777.0], [3.7, 6777.0], [3.8, 6777.0], [3.9, 6777.0], [4.0, 6907.0], [4.1, 6907.0], [4.2, 6907.0], [4.3, 6907.0], [4.4, 6907.0], [4.5, 7488.0], [4.6, 7488.0], [4.7, 7488.0], [4.8, 7488.0], [4.9, 7488.0], [5.0, 7664.0], [5.1, 7664.0], [5.2, 7664.0], [5.3, 7664.0], [5.4, 7664.0], [5.5, 8292.0], [5.6, 8292.0], [5.7, 8292.0], [5.8, 8292.0], [5.9, 8292.0], [6.0, 8323.0], [6.1, 8323.0], [6.2, 8323.0], [6.3, 8323.0], [6.4, 8323.0], [6.5, 8578.0], [6.6, 8578.0], [6.7, 8578.0], [6.8, 8578.0], [6.9, 8578.0], [7.0, 8946.0], [7.1, 8946.0], [7.2, 8946.0], [7.3, 8946.0], [7.4, 8946.0], [7.5, 9608.0], [7.6, 9608.0], [7.7, 9608.0], [7.8, 9608.0], [7.9, 9608.0], [8.0, 10292.0], [8.1, 10292.0], [8.2, 10292.0], [8.3, 10292.0], [8.4, 10292.0], [8.5, 11153.0], [8.6, 11153.0], [8.7, 11153.0], [8.8, 11153.0], [8.9, 11153.0], [9.0, 11305.0], [9.1, 11305.0], [9.2, 11305.0], [9.3, 11305.0], [9.4, 11305.0], [9.5, 12148.0], [9.6, 12148.0], [9.7, 12148.0], [9.8, 12148.0], [9.9, 12148.0], [10.0, 12472.0], [10.1, 12472.0], [10.2, 12472.0], [10.3, 12472.0], [10.4, 12472.0], [10.5, 13102.0], [10.6, 13102.0], [10.7, 13102.0], [10.8, 13102.0], [10.9, 13102.0], [11.0, 13734.0], [11.1, 13734.0], [11.2, 13734.0], [11.3, 13734.0], [11.4, 13734.0], [11.5, 15187.0], [11.6, 15187.0], [11.7, 15187.0], [11.8, 15187.0], [11.9, 15187.0], [12.0, 16512.0], [12.1, 16512.0], [12.2, 16512.0], [12.3, 16512.0], [12.4, 16512.0], [12.5, 17128.0], [12.6, 17128.0], [12.7, 17128.0], [12.8, 17128.0], [12.9, 17128.0], [13.0, 18117.0], [13.1, 18117.0], [13.2, 18117.0], [13.3, 18117.0], [13.4, 18117.0], [13.5, 18629.0], [13.6, 18629.0], [13.7, 18629.0], [13.8, 18629.0], [13.9, 18629.0], [14.0, 19747.0], [14.1, 19747.0], [14.2, 19747.0], [14.3, 19747.0], [14.4, 19747.0], [14.5, 20420.0], [14.6, 20420.0], [14.7, 20420.0], [14.8, 20420.0], [14.9, 20420.0], [15.0, 22551.0], [15.1, 22551.0], [15.2, 22551.0], [15.3, 22551.0], [15.4, 22551.0], [15.5, 25233.0], [15.6, 25233.0], [15.7, 25233.0], [15.8, 25233.0], [15.9, 25233.0], [16.0, 25947.0], [16.1, 25947.0], [16.2, 25947.0], [16.3, 25947.0], [16.4, 25947.0], [16.5, 28286.0], [16.6, 28286.0], [16.7, 28286.0], [16.8, 28286.0], [16.9, 28286.0], [17.0, 28748.0], [17.1, 28748.0], [17.2, 28748.0], [17.3, 28748.0], [17.4, 28748.0], [17.5, 29024.0], [17.6, 29024.0], [17.7, 29024.0], [17.8, 29024.0], [17.9, 29024.0], [18.0, 30321.0], [18.1, 30321.0], [18.2, 30321.0], [18.3, 30321.0], [18.4, 30321.0], [18.5, 31561.0], [18.6, 31561.0], [18.7, 31561.0], [18.8, 31561.0], [18.9, 31561.0], [19.0, 31715.0], [19.1, 31715.0], [19.2, 31715.0], [19.3, 31715.0], [19.4, 31715.0], [19.5, 32183.0], [19.6, 32183.0], [19.7, 32183.0], [19.8, 32183.0], [19.9, 32183.0], [20.0, 32923.0], [20.1, 32923.0], [20.2, 32923.0], [20.3, 32923.0], [20.4, 32923.0], [20.5, 33451.0], [20.6, 33451.0], [20.7, 33451.0], [20.8, 33451.0], [20.9, 33451.0], [21.0, 33733.0], [21.1, 33733.0], [21.2, 33733.0], [21.3, 33733.0], [21.4, 33733.0], [21.5, 34555.0], [21.6, 34555.0], [21.7, 34555.0], [21.8, 34555.0], [21.9, 34555.0], [22.0, 34756.0], [22.1, 34756.0], [22.2, 34756.0], [22.3, 34756.0], [22.4, 34756.0], [22.5, 36535.0], [22.6, 36535.0], [22.7, 36535.0], [22.8, 36535.0], [22.9, 36535.0], [23.0, 38212.0], [23.1, 38212.0], [23.2, 38212.0], [23.3, 38212.0], [23.4, 38212.0], [23.5, 38248.0], [23.6, 38248.0], [23.7, 38248.0], [23.8, 38248.0], [23.9, 38248.0], [24.0, 40115.0], [24.1, 40115.0], [24.2, 40115.0], [24.3, 40115.0], [24.4, 40115.0], [24.5, 40827.0], [24.6, 40827.0], [24.7, 40827.0], [24.8, 40827.0], [24.9, 40827.0], [25.0, 41215.0], [25.1, 41215.0], [25.2, 41215.0], [25.3, 41215.0], [25.4, 41215.0], [25.5, 44336.0], [25.6, 44336.0], [25.7, 44336.0], [25.8, 44336.0], [25.9, 44336.0], [26.0, 45059.0], [26.1, 45059.0], [26.2, 45059.0], [26.3, 45059.0], [26.4, 45059.0], [26.5, 46665.0], [26.6, 46665.0], [26.7, 46665.0], [26.8, 46665.0], [26.9, 46665.0], [27.0, 47141.0], [27.1, 47141.0], [27.2, 47141.0], [27.3, 47141.0], [27.4, 47141.0], [27.5, 47800.0], [27.6, 47800.0], [27.7, 47800.0], [27.8, 47800.0], [27.9, 47800.0], [28.0, 49330.0], [28.1, 49330.0], [28.2, 49330.0], [28.3, 49330.0], [28.4, 49330.0], [28.5, 49774.0], [28.6, 49774.0], [28.7, 49774.0], [28.8, 49774.0], [28.9, 49774.0], [29.0, 50089.0], [29.1, 50089.0], [29.2, 50089.0], [29.3, 50089.0], [29.4, 50089.0], [29.5, 51124.0], [29.6, 51124.0], [29.7, 51124.0], [29.8, 51124.0], [29.9, 51124.0], [30.0, 51671.0], [30.1, 51671.0], [30.2, 51671.0], [30.3, 51671.0], [30.4, 51671.0], [30.5, 52717.0], [30.6, 52717.0], [30.7, 52717.0], [30.8, 52717.0], [30.9, 52717.0], [31.0, 53396.0], [31.1, 53396.0], [31.2, 53396.0], [31.3, 53396.0], [31.4, 53396.0], [31.5, 53786.0], [31.6, 53786.0], [31.7, 53786.0], [31.8, 53786.0], [31.9, 53786.0], [32.0, 53922.0], [32.1, 53922.0], [32.2, 53922.0], [32.3, 53922.0], [32.4, 53922.0], [32.5, 54181.0], [32.6, 54181.0], [32.7, 54181.0], [32.8, 54181.0], [32.9, 54181.0], [33.0, 54592.0], [33.1, 54592.0], [33.2, 54592.0], [33.3, 54592.0], [33.4, 54592.0], [33.5, 56508.0], [33.6, 56508.0], [33.7, 56508.0], [33.8, 56508.0], [33.9, 56508.0], [34.0, 56529.0], [34.1, 56529.0], [34.2, 56529.0], [34.3, 56529.0], [34.4, 56529.0], [34.5, 56593.0], [34.6, 56593.0], [34.7, 56593.0], [34.8, 56593.0], [34.9, 56593.0], [35.0, 57007.0], [35.1, 57007.0], [35.2, 57007.0], [35.3, 57007.0], [35.4, 57007.0], [35.5, 58857.0], [35.6, 58857.0], [35.7, 58857.0], [35.8, 58857.0], [35.9, 58857.0], [36.0, 59106.0], [36.1, 59106.0], [36.2, 59106.0], [36.3, 59106.0], [36.4, 59106.0], [36.5, 59960.0], [36.6, 59960.0], [36.7, 59960.0], [36.8, 59960.0], [36.9, 59960.0], [37.0, 62460.0], [37.1, 62460.0], [37.2, 62460.0], [37.3, 62460.0], [37.4, 62460.0], [37.5, 63740.0], [37.6, 63740.0], [37.7, 63740.0], [37.8, 63740.0], [37.9, 63740.0], [38.0, 64621.0], [38.1, 64621.0], [38.2, 64621.0], [38.3, 64621.0], [38.4, 64621.0], [38.5, 64722.0], [38.6, 64722.0], [38.7, 64722.0], [38.8, 64722.0], [38.9, 64722.0], [39.0, 65904.0], [39.1, 65904.0], [39.2, 65904.0], [39.3, 65904.0], [39.4, 65904.0], [39.5, 66755.0], [39.6, 66755.0], [39.7, 66755.0], [39.8, 66755.0], [39.9, 66755.0], [40.0, 66882.0], [40.1, 66882.0], [40.2, 66882.0], [40.3, 66882.0], [40.4, 66882.0], [40.5, 69799.0], [40.6, 69799.0], [40.7, 69799.0], [40.8, 69799.0], [40.9, 69799.0], [41.0, 69822.0], [41.1, 69822.0], [41.2, 69822.0], [41.3, 69822.0], [41.4, 69822.0], [41.5, 70884.0], [41.6, 70884.0], [41.7, 70884.0], [41.8, 70884.0], [41.9, 70884.0], [42.0, 71061.0], [42.1, 71061.0], [42.2, 71061.0], [42.3, 71061.0], [42.4, 71061.0], [42.5, 72011.0], [42.6, 72011.0], [42.7, 72011.0], [42.8, 72011.0], [42.9, 72011.0], [43.0, 72520.0], [43.1, 72520.0], [43.2, 72520.0], [43.3, 72520.0], [43.4, 72520.0], [43.5, 72793.0], [43.6, 72793.0], [43.7, 72793.0], [43.8, 72793.0], [43.9, 72793.0], [44.0, 73183.0], [44.1, 73183.0], [44.2, 73183.0], [44.3, 73183.0], [44.4, 73183.0], [44.5, 73319.0], [44.6, 73319.0], [44.7, 73319.0], [44.8, 73319.0], [44.9, 73319.0], [45.0, 74429.0], [45.1, 74429.0], [45.2, 74429.0], [45.3, 74429.0], [45.4, 74429.0], [45.5, 75035.0], [45.6, 75035.0], [45.7, 75035.0], [45.8, 75035.0], [45.9, 75035.0], [46.0, 75055.0], [46.1, 75055.0], [46.2, 75055.0], [46.3, 75055.0], [46.4, 75055.0], [46.5, 75317.0], [46.6, 75317.0], [46.7, 75317.0], [46.8, 75317.0], [46.9, 75317.0], [47.0, 75907.0], [47.1, 75907.0], [47.2, 75907.0], [47.3, 75907.0], [47.4, 75907.0], [47.5, 77211.0], [47.6, 77211.0], [47.7, 77211.0], [47.8, 77211.0], [47.9, 77211.0], [48.0, 77460.0], [48.1, 77460.0], [48.2, 77460.0], [48.3, 77460.0], [48.4, 77460.0], [48.5, 78096.0], [48.6, 78096.0], [48.7, 78096.0], [48.8, 78096.0], [48.9, 78096.0], [49.0, 78357.0], [49.1, 78357.0], [49.2, 78357.0], [49.3, 78357.0], [49.4, 78357.0], [49.5, 78433.0], [49.6, 78433.0], [49.7, 78433.0], [49.8, 78433.0], [49.9, 78433.0], [50.0, 79014.0], [50.1, 79014.0], [50.2, 79014.0], [50.3, 79014.0], [50.4, 79014.0], [50.5, 79703.0], [50.6, 79703.0], [50.7, 79703.0], [50.8, 79703.0], [50.9, 79703.0], [51.0, 80087.0], [51.1, 80087.0], [51.2, 80087.0], [51.3, 80087.0], [51.4, 80087.0], [51.5, 80347.0], [51.6, 80347.0], [51.7, 80347.0], [51.8, 80347.0], [51.9, 80347.0], [52.0, 80432.0], [52.1, 80432.0], [52.2, 80432.0], [52.3, 80432.0], [52.4, 80432.0], [52.5, 81601.0], [52.6, 81601.0], [52.7, 81601.0], [52.8, 81601.0], [52.9, 81601.0], [53.0, 82298.0], [53.1, 82298.0], [53.2, 82298.0], [53.3, 82298.0], [53.4, 82298.0], [53.5, 82828.0], [53.6, 82828.0], [53.7, 82828.0], [53.8, 82828.0], [53.9, 82828.0], [54.0, 83179.0], [54.1, 83179.0], [54.2, 83179.0], [54.3, 83179.0], [54.4, 83179.0], [54.5, 83781.0], [54.6, 83781.0], [54.7, 83781.0], [54.8, 83781.0], [54.9, 83781.0], [55.0, 84791.0], [55.1, 84791.0], [55.2, 84791.0], [55.3, 84791.0], [55.4, 84791.0], [55.5, 85416.0], [55.6, 85416.0], [55.7, 85416.0], [55.8, 85416.0], [55.9, 85416.0], [56.0, 85975.0], [56.1, 85975.0], [56.2, 85975.0], [56.3, 85975.0], [56.4, 85975.0], [56.5, 86084.0], [56.6, 86084.0], [56.7, 86084.0], [56.8, 86084.0], [56.9, 86084.0], [57.0, 86876.0], [57.1, 86876.0], [57.2, 86876.0], [57.3, 86876.0], [57.4, 86876.0], [57.5, 86885.0], [57.6, 86885.0], [57.7, 86885.0], [57.8, 86885.0], [57.9, 86885.0], [58.0, 87255.0], [58.1, 87255.0], [58.2, 87255.0], [58.3, 87255.0], [58.4, 87255.0], [58.5, 87554.0], [58.6, 87554.0], [58.7, 87554.0], [58.8, 87554.0], [58.9, 87554.0], [59.0, 87700.0], [59.1, 87700.0], [59.2, 87700.0], [59.3, 87700.0], [59.4, 87700.0], [59.5, 87962.0], [59.6, 87962.0], [59.7, 87962.0], [59.8, 87962.0], [59.9, 87962.0], [60.0, 88087.0], [60.1, 88087.0], [60.2, 88087.0], [60.3, 88087.0], [60.4, 88087.0], [60.5, 88901.0], [60.6, 88901.0], [60.7, 88901.0], [60.8, 88901.0], [60.9, 88901.0], [61.0, 88917.0], [61.1, 88917.0], [61.2, 88917.0], [61.3, 88917.0], [61.4, 88917.0], [61.5, 89858.0], [61.6, 89858.0], [61.7, 89858.0], [61.8, 89858.0], [61.9, 89858.0], [62.0, 90590.0], [62.1, 90590.0], [62.2, 90590.0], [62.3, 90590.0], [62.4, 90590.0], [62.5, 90835.0], [62.6, 90835.0], [62.7, 90835.0], [62.8, 90835.0], [62.9, 90835.0], [63.0, 91539.0], [63.1, 91539.0], [63.2, 91539.0], [63.3, 91539.0], [63.4, 91539.0], [63.5, 92072.0], [63.6, 92072.0], [63.7, 92072.0], [63.8, 92072.0], [63.9, 92072.0], [64.0, 92194.0], [64.1, 92194.0], [64.2, 92194.0], [64.3, 92194.0], [64.4, 92194.0], [64.5, 92625.0], [64.6, 92625.0], [64.7, 92625.0], [64.8, 92625.0], [64.9, 92625.0], [65.0, 93370.0], [65.1, 93370.0], [65.2, 93370.0], [65.3, 93370.0], [65.4, 93370.0], [65.5, 93395.0], [65.6, 93395.0], [65.7, 93395.0], [65.8, 93395.0], [65.9, 93395.0], [66.0, 93702.0], [66.1, 93702.0], [66.2, 93702.0], [66.3, 93702.0], [66.4, 93702.0], [66.5, 93920.0], [66.6, 93920.0], [66.7, 93920.0], [66.8, 93920.0], [66.9, 93920.0], [67.0, 94025.0], [67.1, 94025.0], [67.2, 94025.0], [67.3, 94025.0], [67.4, 94025.0], [67.5, 94044.0], [67.6, 94044.0], [67.7, 94044.0], [67.8, 94044.0], [67.9, 94044.0], [68.0, 94137.0], [68.1, 94137.0], [68.2, 94137.0], [68.3, 94137.0], [68.4, 94137.0], [68.5, 94211.0], [68.6, 94211.0], [68.7, 94211.0], [68.8, 94211.0], [68.9, 94211.0], [69.0, 94368.0], [69.1, 94368.0], [69.2, 94368.0], [69.3, 94368.0], [69.4, 94368.0], [69.5, 94389.0], [69.6, 94389.0], [69.7, 94389.0], [69.8, 94389.0], [69.9, 94389.0], [70.0, 94604.0], [70.1, 94604.0], [70.2, 94604.0], [70.3, 94604.0], [70.4, 94604.0], [70.5, 94647.0], [70.6, 94647.0], [70.7, 94647.0], [70.8, 94647.0], [70.9, 94647.0], [71.0, 94944.0], [71.1, 94944.0], [71.2, 94944.0], [71.3, 94944.0], [71.4, 94944.0], [71.5, 95367.0], [71.6, 95367.0], [71.7, 95367.0], [71.8, 95367.0], [71.9, 95367.0], [72.0, 95531.0], [72.1, 95531.0], [72.2, 95531.0], [72.3, 95531.0], [72.4, 95531.0], [72.5, 95717.0], [72.6, 95717.0], [72.7, 95717.0], [72.8, 95717.0], [72.9, 95717.0], [73.0, 95983.0], [73.1, 95983.0], [73.2, 95983.0], [73.3, 95983.0], [73.4, 95983.0], [73.5, 96019.0], [73.6, 96019.0], [73.7, 96019.0], [73.8, 96019.0], [73.9, 96019.0], [74.0, 96064.0], [74.1, 96064.0], [74.2, 96064.0], [74.3, 96064.0], [74.4, 96064.0], [74.5, 96179.0], [74.6, 96179.0], [74.7, 96179.0], [74.8, 96179.0], [74.9, 96179.0], [75.0, 96388.0], [75.1, 96388.0], [75.2, 96388.0], [75.3, 96388.0], [75.4, 96388.0], [75.5, 96525.0], [75.6, 96525.0], [75.7, 96525.0], [75.8, 96525.0], [75.9, 96525.0], [76.0, 96794.0], [76.1, 96794.0], [76.2, 96794.0], [76.3, 96794.0], [76.4, 96794.0], [76.5, 96931.0], [76.6, 96931.0], [76.7, 96931.0], [76.8, 96931.0], [76.9, 96931.0], [77.0, 97004.0], [77.1, 97004.0], [77.2, 97004.0], [77.3, 97004.0], [77.4, 97004.0], [77.5, 97279.0], [77.6, 97279.0], [77.7, 97279.0], [77.8, 97279.0], [77.9, 97279.0], [78.0, 97306.0], [78.1, 97306.0], [78.2, 97306.0], [78.3, 97306.0], [78.4, 97306.0], [78.5, 97388.0], [78.6, 97388.0], [78.7, 97388.0], [78.8, 97388.0], [78.9, 97388.0], [79.0, 97406.0], [79.1, 97406.0], [79.2, 97406.0], [79.3, 97406.0], [79.4, 97406.0], [79.5, 97604.0], [79.6, 97604.0], [79.7, 97604.0], [79.8, 97604.0], [79.9, 97604.0], [80.0, 98004.0], [80.1, 98004.0], [80.2, 98004.0], [80.3, 98004.0], [80.4, 98004.0], [80.5, 98110.0], [80.6, 98110.0], [80.7, 98110.0], [80.8, 98110.0], [80.9, 98110.0], [81.0, 98193.0], [81.1, 98193.0], [81.2, 98193.0], [81.3, 98193.0], [81.4, 98193.0], [81.5, 98431.0], [81.6, 98431.0], [81.7, 98431.0], [81.8, 98431.0], [81.9, 98431.0], [82.0, 98670.0], [82.1, 98670.0], [82.2, 98670.0], [82.3, 98670.0], [82.4, 98670.0], [82.5, 98937.0], [82.6, 98937.0], [82.7, 98937.0], [82.8, 98937.0], [82.9, 98937.0], [83.0, 98993.0], [83.1, 98993.0], [83.2, 98993.0], [83.3, 98993.0], [83.4, 98993.0], [83.5, 99059.0], [83.6, 99059.0], [83.7, 99059.0], [83.8, 99059.0], [83.9, 99059.0], [84.0, 99080.0], [84.1, 99080.0], [84.2, 99080.0], [84.3, 99080.0], [84.4, 99080.0], [84.5, 99113.0], [84.6, 99113.0], [84.7, 99113.0], [84.8, 99113.0], [84.9, 99113.0], [85.0, 99408.0], [85.1, 99408.0], [85.2, 99408.0], [85.3, 99408.0], [85.4, 99408.0], [85.5, 99471.0], [85.6, 99471.0], [85.7, 99471.0], [85.8, 99471.0], [85.9, 99471.0], [86.0, 99534.0], [86.1, 99534.0], [86.2, 99534.0], [86.3, 99534.0], [86.4, 99534.0], [86.5, 99558.0], [86.6, 99558.0], [86.7, 99558.0], [86.8, 99558.0], [86.9, 99558.0], [87.0, 99973.0], [87.1, 99973.0], [87.2, 99973.0], [87.3, 99973.0], [87.4, 99973.0], [87.5, 100116.0], [87.6, 100116.0], [87.7, 100116.0], [87.8, 100116.0], [87.9, 100116.0], [88.0, 100215.0], [88.1, 100215.0], [88.2, 100215.0], [88.3, 100215.0], [88.4, 100215.0], [88.5, 100300.0], [88.6, 100300.0], [88.7, 100300.0], [88.8, 100300.0], [88.9, 100300.0], [89.0, 100321.0], [89.1, 100321.0], [89.2, 100321.0], [89.3, 100321.0], [89.4, 100321.0], [89.5, 100743.0], [89.6, 100743.0], [89.7, 100743.0], [89.8, 100743.0], [89.9, 100743.0], [90.0, 100874.0], [90.1, 100874.0], [90.2, 100874.0], [90.3, 100874.0], [90.4, 100874.0], [90.5, 101109.0], [90.6, 101109.0], [90.7, 101109.0], [90.8, 101109.0], [90.9, 101109.0], [91.0, 101331.0], [91.1, 101331.0], [91.2, 101331.0], [91.3, 101331.0], [91.4, 101331.0], [91.5, 101391.0], [91.6, 101391.0], [91.7, 101391.0], [91.8, 101391.0], [91.9, 101391.0], [92.0, 101839.0], [92.1, 101839.0], [92.2, 101839.0], [92.3, 101839.0], [92.4, 101839.0], [92.5, 101842.0], [92.6, 101842.0], [92.7, 101842.0], [92.8, 101842.0], [92.9, 101842.0], [93.0, 101962.0], [93.1, 101962.0], [93.2, 101962.0], [93.3, 101962.0], [93.4, 101962.0], [93.5, 101999.0], [93.6, 101999.0], [93.7, 101999.0], [93.8, 101999.0], [93.9, 101999.0], [94.0, 102151.0], [94.1, 102151.0], [94.2, 102151.0], [94.3, 102151.0], [94.4, 102151.0], [94.5, 102238.0], [94.6, 102238.0], [94.7, 102238.0], [94.8, 102238.0], [94.9, 102238.0], [95.0, 102328.0], [95.1, 102328.0], [95.2, 102328.0], [95.3, 102328.0], [95.4, 102328.0], [95.5, 102573.0], [95.6, 102573.0], [95.7, 102573.0], [95.8, 102573.0], [95.9, 102573.0], [96.0, 102730.0], [96.1, 102730.0], [96.2, 102730.0], [96.3, 102730.0], [96.4, 102730.0], [96.5, 102946.0], [96.6, 102946.0], [96.7, 102946.0], [96.8, 102946.0], [96.9, 102946.0], [97.0, 103035.0], [97.1, 103035.0], [97.2, 103035.0], [97.3, 103035.0], [97.4, 103035.0], [97.5, 103359.0], [97.6, 103359.0], [97.7, 103359.0], [97.8, 103359.0], [97.9, 103359.0], [98.0, 103526.0], [98.1, 103526.0], [98.2, 103526.0], [98.3, 103526.0], [98.4, 103526.0], [98.5, 103709.0], [98.6, 103709.0], [98.7, 103709.0], [98.8, 103709.0], [98.9, 103709.0], [99.0, 103841.0], [99.1, 103841.0], [99.2, 103841.0], [99.3, 103841.0], [99.4, 103841.0], [99.5, 103877.0], [99.6, 103877.0], [99.7, 103877.0], [99.8, 103877.0], [99.9, 103877.0]], "isOverall": false, "label": "Get Login Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 7.0, "series": [{"data": [[165600.0, 1.0], [182400.0, 1.0], [184800.0, 1.0], [184000.0, 1.0], [204000.0, 1.0], [205600.0, 1.0], [211200.0, 1.0], [212000.0, 2.0], [209600.0, 1.0], [207200.0, 2.0], [206400.0, 1.0], [204800.0, 2.0], [219200.0, 3.0], [214400.0, 1.0], [217600.0, 3.0], [216000.0, 1.0], [218400.0, 2.0], [148900.0, 1.0], [149700.0, 1.0], [151300.0, 1.0], [177700.0, 1.0], [186500.0, 1.0], [202500.0, 1.0], [204100.0, 1.0], [205700.0, 2.0], [207300.0, 2.0], [212100.0, 2.0], [211300.0, 1.0], [212900.0, 1.0], [209700.0, 1.0], [208900.0, 1.0], [208100.0, 1.0], [204900.0, 1.0], [206500.0, 2.0], [216900.0, 2.0], [218500.0, 1.0], [220100.0, 2.0], [216100.0, 1.0], [213700.0, 1.0], [215300.0, 1.0], [113100.0, 1.0], [115100.0, 1.0], [129100.0, 1.0], [141000.0, 1.0], [196200.0, 1.0], [204200.0, 1.0], [211400.0, 3.0], [210600.0, 3.0], [209800.0, 1.0], [209000.0, 2.0], [208200.0, 1.0], [213800.0, 2.0], [219400.0, 1.0], [220200.0, 1.0], [213000.0, 1.0], [39900.0, 1.0], [167500.0, 1.0], [202700.0, 1.0], [204300.0, 1.0], [208300.0, 1.0], [211500.0, 3.0], [210700.0, 2.0], [212300.0, 1.0], [209900.0, 5.0], [209100.0, 1.0], [207500.0, 1.0], [206700.0, 1.0], [220300.0, 1.0], [216300.0, 1.0], [217900.0, 2.0], [213900.0, 1.0], [217100.0, 2.0], [123000.0, 1.0], [124600.0, 1.0], [125800.0, 1.0], [149200.0, 1.0], [152400.0, 1.0], [158800.0, 1.0], [178000.0, 1.0], [181200.0, 1.0], [183600.0, 1.0], [188400.0, 1.0], [202800.0, 1.0], [204400.0, 1.0], [206800.0, 3.0], [210000.0, 3.0], [211600.0, 1.0], [210800.0, 2.0], [208400.0, 1.0], [206000.0, 2.0], [205200.0, 2.0], [214000.0, 1.0], [214800.0, 2.0], [216400.0, 1.0], [213200.0, 1.0], [217200.0, 1.0], [220400.0, 1.0], [218800.0, 3.0], [137300.0, 1.0], [147700.0, 1.0], [196500.0, 1.0], [204500.0, 1.0], [206100.0, 2.0], [210900.0, 1.0], [211700.0, 2.0], [210100.0, 1.0], [209300.0, 3.0], [216500.0, 1.0], [213300.0, 1.0], [108500.0, 1.0], [119700.0, 1.0], [124900.0, 1.0], [163000.0, 1.0], [199000.0, 1.0], [199800.0, 1.0], [203800.0, 1.0], [204600.0, 1.0], [206200.0, 2.0], [212600.0, 1.0], [211000.0, 1.0], [209400.0, 2.0], [207000.0, 2.0], [214200.0, 1.0], [218200.0, 2.0], [219800.0, 1.0], [215000.0, 1.0], [213400.0, 1.0], [39600.0, 1.0], [173500.0, 1.0], [192700.0, 1.0], [204700.0, 3.0], [203900.0, 1.0], [211100.0, 2.0], [207900.0, 2.0], [208700.0, 1.0], [207100.0, 2.0], [206300.0, 2.0], [205500.0, 1.0], [216700.0, 2.0], [215900.0, 2.0], [219900.0, 1.0], [213500.0, 1.0], [219100.0, 1.0], [218300.0, 1.0], [217500.0, 1.0]], "isOverall": false, "label": "Generate Login Request", "isController": false}, {"data": [[76700.0, 1.0], [76300.0, 1.0], [81900.0, 1.0], [81100.0, 1.0], [80300.0, 1.0], [79500.0, 1.0], [79100.0, 2.0], [85900.0, 3.0], [82700.0, 1.0], [89900.0, 2.0], [89500.0, 2.0], [89100.0, 3.0], [88300.0, 2.0], [87100.0, 3.0], [87900.0, 1.0], [86700.0, 1.0], [93900.0, 1.0], [92300.0, 2.0], [91900.0, 1.0], [91100.0, 1.0], [97500.0, 1.0], [95500.0, 1.0], [94700.0, 1.0], [94300.0, 1.0], [105500.0, 1.0], [105900.0, 1.0], [103100.0, 1.0], [113100.0, 1.0], [118300.0, 1.0], [118700.0, 1.0], [117900.0, 1.0], [117500.0, 1.0], [121900.0, 1.0], [120300.0, 1.0], [120700.0, 1.0], [119100.0, 2.0], [75800.0, 2.0], [75000.0, 2.0], [81800.0, 1.0], [81000.0, 1.0], [79400.0, 1.0], [78600.0, 2.0], [78200.0, 1.0], [85400.0, 2.0], [84600.0, 2.0], [83400.0, 1.0], [82200.0, 1.0], [88200.0, 1.0], [89000.0, 2.0], [88600.0, 2.0], [89400.0, 1.0], [87000.0, 2.0], [86200.0, 1.0], [86600.0, 1.0], [90200.0, 3.0], [94200.0, 1.0], [93000.0, 1.0], [91800.0, 1.0], [105000.0, 2.0], [109800.0, 1.0], [109400.0, 1.0], [108200.0, 1.0], [114600.0, 1.0], [117800.0, 1.0], [118600.0, 1.0], [116600.0, 1.0], [115800.0, 1.0], [119000.0, 1.0], [120200.0, 1.0], [120600.0, 1.0], [119400.0, 1.0], [77300.0, 1.0], [80100.0, 1.0], [78900.0, 1.0], [78500.0, 1.0], [84900.0, 1.0], [84500.0, 1.0], [90100.0, 2.0], [88900.0, 1.0], [88500.0, 1.0], [88100.0, 1.0], [87300.0, 2.0], [90500.0, 1.0], [91700.0, 4.0], [92100.0, 3.0], [91300.0, 2.0], [93700.0, 1.0], [90900.0, 2.0], [96500.0, 1.0], [94500.0, 2.0], [94900.0, 1.0], [102100.0, 2.0], [99700.0, 1.0], [105700.0, 1.0], [105300.0, 1.0], [103300.0, 1.0], [103700.0, 1.0], [113300.0, 1.0], [118500.0, 1.0], [115700.0, 1.0], [118900.0, 1.0], [121300.0, 1.0], [120100.0, 1.0], [120500.0, 1.0], [119700.0, 1.0], [36200.0, 1.0], [77200.0, 3.0], [76800.0, 1.0], [76400.0, 1.0], [76000.0, 3.0], [74800.0, 1.0], [74400.0, 1.0], [81600.0, 2.0], [80800.0, 1.0], [80000.0, 1.0], [80400.0, 1.0], [79600.0, 2.0], [79200.0, 1.0], [78800.0, 1.0], [78400.0, 1.0], [85200.0, 1.0], [82800.0, 2.0], [88800.0, 1.0], [87600.0, 3.0], [88000.0, 1.0], [87200.0, 3.0], [86800.0, 1.0], [94000.0, 1.0], [92400.0, 2.0], [91600.0, 2.0], [91200.0, 1.0], [92000.0, 1.0], [96800.0, 1.0], [94800.0, 3.0], [94400.0, 1.0], [106000.0, 1.0], [105200.0, 1.0], [106800.0, 1.0], [114400.0, 2.0], [112000.0, 2.0], [117600.0, 2.0], [121600.0, 1.0], [120000.0, 1.0], [120400.0, 1.0], [119200.0, 2.0], [119600.0, 2.0]], "isOverall": false, "label": "Generate Cheep", "isController": false}, {"data": [[0.0, 1.0], [140000.0, 1.0], [142400.0, 1.0], [140800.0, 1.0], [145600.0, 1.0], [147200.0, 1.0], [134500.0, 1.0], [146500.0, 1.0], [114300.0, 3.0], [113500.0, 1.0], [113100.0, 5.0], [112300.0, 1.0], [118700.0, 3.0], [117500.0, 3.0], [117900.0, 4.0], [117100.0, 3.0], [114700.0, 3.0], [115900.0, 1.0], [115100.0, 1.0], [115500.0, 6.0], [122300.0, 1.0], [119500.0, 2.0], [121500.0, 1.0], [119100.0, 4.0], [119900.0, 2.0], [120300.0, 3.0], [120700.0, 4.0], [123100.0, 1.0], [123500.0, 1.0], [129500.0, 1.0], [127900.0, 1.0], [137000.0, 1.0], [134600.0, 1.0], [141000.0, 1.0], [143400.0, 1.0], [141800.0, 1.0], [146600.0, 1.0], [133900.0, 1.0], [141900.0, 2.0], [145100.0, 1.0], [142700.0, 1.0], [147500.0, 1.0], [114200.0, 1.0], [113800.0, 2.0], [113000.0, 2.0], [113400.0, 2.0], [111800.0, 1.0], [117400.0, 1.0], [117800.0, 2.0], [118600.0, 1.0], [116600.0, 1.0], [115800.0, 2.0], [115400.0, 2.0], [121000.0, 1.0], [122600.0, 2.0], [121800.0, 1.0], [120200.0, 3.0], [119000.0, 2.0], [120600.0, 2.0], [119400.0, 3.0], [132400.0, 1.0], [139600.0, 1.0], [148400.0, 1.0], [148500.0, 1.0], [88900.0, 1.0], [114500.0, 1.0], [114100.0, 2.0], [112900.0, 2.0], [112500.0, 2.0], [112100.0, 2.0], [111700.0, 1.0], [118100.0, 7.0], [117700.0, 2.0], [116900.0, 2.0], [115300.0, 3.0], [116100.0, 1.0], [115700.0, 1.0], [114900.0, 1.0], [119700.0, 2.0], [119300.0, 3.0], [122100.0, 1.0], [121300.0, 2.0], [118900.0, 3.0], [120100.0, 1.0], [120500.0, 2.0], [122900.0, 1.0], [139000.0, 1.0], [138200.0, 2.0], [143800.0, 1.0], [142200.0, 1.0], [134300.0, 1.0], [131900.0, 1.0], [141500.0, 1.0], [36000.0, 1.0], [146300.0, 1.0], [35400.0, 1.0], [118400.0, 3.0], [115600.0, 4.0], [117600.0, 1.0], [117200.0, 2.0], [115200.0, 3.0], [114800.0, 2.0], [116800.0, 1.0], [122000.0, 1.0], [119600.0, 3.0], [121600.0, 1.0], [120400.0, 2.0], [120000.0, 3.0], [120800.0, 3.0], [119200.0, 3.0], [124400.0, 1.0], [123200.0, 2.0], [127600.0, 1.0]], "isOverall": false, "label": "Get Home Page", "isController": false}, {"data": [[65900.0, 1.0], [66700.0, 1.0], [72700.0, 1.0], [73100.0, 1.0], [75900.0, 1.0], [78300.0, 1.0], [80300.0, 1.0], [83100.0, 1.0], [84700.0, 1.0], [85900.0, 1.0], [87500.0, 1.0], [87900.0, 1.0], [91500.0, 1.0], [93900.0, 1.0], [94300.0, 2.0], [95500.0, 1.0], [95900.0, 1.0], [96300.0, 1.0], [96700.0, 1.0], [99100.0, 1.0], [99500.0, 2.0], [99900.0, 1.0], [100300.0, 2.0], [100700.0, 1.0], [101100.0, 1.0], [101900.0, 2.0], [102300.0, 1.0], [102700.0, 1.0], [103500.0, 1.0], [32900.0, 1.0], [33700.0, 1.0], [34700.0, 1.0], [34500.0, 1.0], [36500.0, 1.0], [40100.0, 1.0], [44300.0, 1.0], [47100.0, 1.0], [49300.0, 1.0], [49700.0, 1.0], [51100.0, 1.0], [52700.0, 1.0], [53300.0, 1.0], [53700.0, 1.0], [53900.0, 1.0], [54100.0, 1.0], [54500.0, 1.0], [56500.0, 3.0], [59100.0, 1.0], [59900.0, 1.0], [63700.0, 1.0], [64700.0, 1.0], [69800.0, 1.0], [71000.0, 1.0], [75000.0, 2.0], [77400.0, 1.0], [79000.0, 1.0], [82200.0, 1.0], [85400.0, 1.0], [89800.0, 1.0], [92600.0, 1.0], [94200.0, 1.0], [94600.0, 2.0], [97000.0, 1.0], [97400.0, 1.0], [98600.0, 1.0], [99000.0, 2.0], [99400.0, 2.0], [100200.0, 1.0], [101800.0, 2.0], [102200.0, 1.0], [103000.0, 1.0], [103800.0, 2.0], [1200.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [4300.0, 1.0], [69700.0, 1.0], [72500.0, 1.0], [73300.0, 1.0], [75300.0, 1.0], [5100.0, 1.0], [79700.0, 1.0], [5200.0, 1.0], [83700.0, 1.0], [87700.0, 1.0], [88900.0, 2.0], [5800.0, 1.0], [90500.0, 1.0], [92100.0, 1.0], [93700.0, 1.0], [94100.0, 1.0], [93300.0, 2.0], [94900.0, 1.0], [95700.0, 1.0], [95300.0, 1.0], [96100.0, 1.0], [96500.0, 1.0], [96900.0, 1.0], [97300.0, 2.0], [98100.0, 2.0], [98900.0, 2.0], [100100.0, 1.0], [101300.0, 2.0], [102100.0, 1.0], [102500.0, 1.0], [102900.0, 1.0], [103300.0, 1.0], [103700.0, 1.0], [6700.0, 1.0], [6900.0, 1.0], [7400.0, 1.0], [7600.0, 1.0], [8500.0, 1.0], [8200.0, 1.0], [8300.0, 1.0], [8900.0, 1.0], [9600.0, 1.0], [10200.0, 1.0], [11100.0, 1.0], [11300.0, 1.0], [12100.0, 1.0], [12400.0, 1.0], [13100.0, 1.0], [13700.0, 1.0], [15100.0, 1.0], [16500.0, 1.0], [17100.0, 1.0], [18100.0, 1.0], [18600.0, 1.0], [19700.0, 1.0], [20400.0, 1.0], [22500.0, 1.0], [25200.0, 1.0], [25900.0, 1.0], [28200.0, 1.0], [28700.0, 1.0], [29000.0, 1.0], [30300.0, 1.0], [31700.0, 1.0], [31500.0, 1.0], [32100.0, 1.0], [33400.0, 1.0], [38200.0, 2.0], [40800.0, 1.0], [41200.0, 1.0], [45000.0, 1.0], [46600.0, 1.0], [47800.0, 1.0], [50000.0, 1.0], [51600.0, 1.0], [57000.0, 1.0], [58800.0, 1.0], [62400.0, 1.0], [64600.0, 1.0], [66800.0, 1.0], [70800.0, 1.0], [72000.0, 1.0], [74400.0, 1.0], [77200.0, 1.0], [78000.0, 1.0], [78400.0, 1.0], [80000.0, 1.0], [80400.0, 1.0], [81600.0, 1.0], [82800.0, 1.0], [86000.0, 1.0], [86800.0, 2.0], [87200.0, 1.0], [88000.0, 1.0], [90800.0, 1.0], [92000.0, 1.0], [94000.0, 2.0], [96000.0, 2.0], [97200.0, 1.0], [97600.0, 1.0], [98000.0, 1.0], [98400.0, 1.0], [100800.0, 1.0]], "isOverall": false, "label": "Get Login Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 220400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 793.0, "series": [{"data": [[1.0, 1.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 6.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[2.0, 793.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 55.0, "minX": 1.5226155E12, "maxY": 200.0, "series": [{"data": [[1.52261592E12, 172.56834532374094], [1.52261562E12, 200.0], [1.5226158E12, 200.0], [1.5226155E12, 92.96153846153845], [1.52261598E12, 141.22388059701493], [1.52261568E12, 200.0], [1.52261586E12, 196.97468354430373], [1.52261556E12, 200.0], [1.52261604E12, 55.0], [1.52261574E12, 200.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52261604E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3212.0, "minX": 1.0, "maxY": 200166.2699999999, "series": [{"data": [[200.0, 200166.2699999999]], "isOverall": false, "label": "Generate Login Request", "isController": false}, {"data": [[200.0, 200166.2699999999]], "isOverall": false, "label": "Generate Login Request-Aggregated", "isController": false}, {"data": [[2.0, 74809.0], [3.0, 75095.0], [4.0, 75086.0], [5.0, 75806.0], [6.0, 75878.0], [7.0, 76079.0], [8.0, 76065.0], [9.0, 76025.0], [10.0, 76466.0], [11.0, 76323.0], [12.0, 76781.0], [13.0, 76826.0], [14.0, 77317.0], [15.0, 77266.0], [16.0, 77256.0], [17.0, 77299.0], [18.0, 78252.0], [19.0, 78572.0], [20.0, 78431.0], [21.0, 78649.0], [22.0, 78651.0], [23.0, 78855.0], [24.0, 79127.0], [25.0, 78938.0], [26.0, 79169.0], [27.0, 79407.0], [28.0, 79226.0], [29.0, 79676.0], [30.0, 79654.0], [31.0, 79599.0], [33.0, 80002.0], [32.0, 80435.0], [35.0, 80373.0], [34.0, 80113.0], [37.0, 80808.0], [36.0, 81032.0], [39.0, 81674.0], [38.0, 81171.0], [41.0, 81838.0], [40.0, 81609.0], [43.0, 82235.0], [42.0, 81927.0], [45.0, 82746.0], [44.0, 82854.0], [47.0, 83475.0], [46.0, 82877.0], [49.0, 84688.0], [48.0, 84640.0], [51.0, 84971.0], [50.0, 84527.0], [53.0, 85465.0], [52.0, 85452.0], [55.0, 85267.0], [54.0, 85965.0], [57.0, 85932.0], [56.0, 85960.0], [59.0, 86207.0], [58.0, 86630.0], [61.0, 87076.0], [60.0, 86756.0], [63.0, 86849.0], [62.0, 87000.0], [67.0, 87633.0], [66.0, 87281.0], [65.0, 87975.0], [64.0, 87623.0], [71.0, 87300.0], [70.0, 87171.0], [69.0, 87278.0], [68.0, 87248.0], [75.0, 88065.0], [74.0, 87102.0], [73.0, 87342.0], [72.0, 87102.0], [79.0, 88921.0], [78.0, 88557.0], [77.0, 88187.0], [76.0, 87670.0], [83.0, 89126.0], [82.0, 89073.0], [81.0, 89439.0], [80.0, 88659.0], [87.0, 89113.0], [86.0, 89022.0], [85.0, 88658.0], [84.0, 88395.0], [91.0, 89182.0], [90.0, 88286.0], [89.0, 88848.0], [88.0, 88301.0], [95.0, 89925.0], [94.0, 89940.0], [93.0, 89571.0], [92.0, 89570.0], [99.0, 91655.0], [98.0, 90276.0], [97.0, 90139.0], [96.0, 90181.0], [103.0, 92033.0], [102.0, 91714.0], [101.0, 91363.0], [100.0, 92189.0], [107.0, 92305.0], [106.0, 91799.0], [105.0, 91289.0], [104.0, 92311.0], [111.0, 90253.0], [110.0, 91635.0], [109.0, 92479.0], [108.0, 92179.0], [115.0, 91118.0], [114.0, 90919.0], [113.0, 90970.0], [112.0, 90278.0], [119.0, 94056.0], [118.0, 92402.0], [117.0, 90525.0], [116.0, 91817.0], [123.0, 91799.0], [122.0, 91321.0], [121.0, 93003.0], [120.0, 93787.0], [127.0, 93939.0], [126.0, 91991.0], [125.0, 91727.0], [124.0, 92123.0], [135.0, 94804.0], [134.0, 94871.0], [133.0, 94912.0], [132.0, 94781.0], [131.0, 94507.0], [130.0, 94278.0], [129.0, 94431.0], [128.0, 94382.0], [143.0, 102184.0], [142.0, 99725.0], [141.0, 96890.0], [140.0, 97594.0], [139.0, 96507.0], [138.0, 95528.0], [137.0, 94820.0], [136.0, 94585.0], [151.0, 106006.0], [150.0, 105742.0], [149.0, 105920.0], [148.0, 105020.0], [147.0, 103363.0], [146.0, 103700.0], [145.0, 103146.0], [144.0, 102192.0], [159.0, 109888.0], [158.0, 109401.0], [157.0, 108268.0], [156.0, 106807.0], [155.0, 105383.0], [154.0, 105595.0], [153.0, 105218.0], [152.0, 105063.0], [167.0, 114670.0], [166.0, 114482.0], [165.0, 115827.0], [164.0, 114411.0], [163.0, 113359.0], [162.0, 113131.0], [161.0, 112068.0], [160.0, 112076.0], [175.0, 120514.0], [174.0, 118717.0], [173.0, 117894.0], [172.0, 118622.0], [171.0, 117950.0], [170.0, 117502.0], [169.0, 116613.0], [168.0, 115732.0], [183.0, 120779.0], [182.0, 120005.0], [181.0, 120120.0], [180.0, 121992.0], [179.0, 119166.0], [178.0, 119618.0], [177.0, 121359.0], [176.0, 120608.0], [191.0, 118566.0], [190.0, 117629.0], [189.0, 118981.0], [188.0, 119691.0], [187.0, 119209.0], [186.0, 117681.0], [185.0, 119186.0], [184.0, 36214.0], [199.0, 120343.0], [198.0, 120245.0], [197.0, 120461.0], [196.0, 119755.0], [195.0, 119087.0], [194.0, 119204.0], [193.0, 118368.0], [192.0, 119433.0], [200.0, 121686.0], [1.0, 74457.0]], "isOverall": false, "label": "Generate Cheep", "isController": false}, {"data": [[100.5, 94155.98499999991]], "isOverall": false, "label": "Generate Cheep-Aggregated", "isController": false}, {"data": [[159.0, 111977.25], [167.0, 115103.66666666667], [166.0, 114683.0], [165.0, 115630.33333333333], [164.0, 114974.76923076923], [163.0, 113398.54545454546], [162.0, 113069.5], [161.0, 112805.0], [175.0, 120549.66666666667], [174.0, 119415.5], [173.0, 119026.6], [172.0, 118419.71428571428], [171.0, 118032.0], [170.0, 117374.0], [169.0, 117120.0], [168.0, 115746.4], [183.0, 120024.0], [181.0, 119439.0], [180.0, 120390.5], [179.0, 120548.75], [178.0, 119781.0], [177.0, 120259.8], [176.0, 120875.5], [191.0, 118712.5], [190.0, 117463.0], [189.0, 118652.16666666666], [188.0, 119711.5], [187.0, 120626.0], [186.0, 118211.0], [185.0, 118134.0], [184.0, 119168.0], [199.0, 121126.0], [197.0, 120237.0], [195.0, 118922.0], [194.0, 117509.0], [193.0, 118771.0], [200.0, 128112.23076923077]], "isOverall": false, "label": "Get Home Page", "isController": false}, {"data": [[180.52500000000003, 120081.25999999998]], "isOverall": false, "label": "Get Home Page-Aggregated", "isController": false}, {"data": [[21.0, 3212.0], [22.0, 5192.0], [23.0, 5809.0], [30.0, 6777.0], [31.0, 6907.0], [34.0, 7488.0], [35.0, 7664.0], [39.0, 8578.0], [40.0, 8292.0], [41.0, 8323.0], [44.0, 8946.0], [47.0, 9608.0], [50.0, 10292.0], [54.0, 11153.0], [56.0, 11305.0], [59.0, 12148.0], [61.0, 12472.0], [65.0, 13102.0], [68.0, 13734.0], [74.0, 15187.0], [79.0, 16512.0], [82.0, 17128.0], [86.0, 18117.0], [89.0, 18629.0], [94.0, 19747.0], [97.0, 20420.0], [107.0, 22551.0], [114.0, 25233.0], [117.0, 25947.0], [127.0, 28286.0], [129.0, 28748.0], [131.0, 29024.0], [137.0, 30321.0], [142.0, 31715.0], [143.0, 31561.0], [146.0, 32183.0], [149.0, 32923.0], [152.0, 33451.0], [155.0, 33733.0], [157.0, 34756.0], [161.0, 34555.0], [165.0, 36535.0], [172.0, 38212.0], [176.0, 38248.0], [181.0, 40115.0], [183.0, 40827.0], [187.0, 41215.0], [198.0, 44336.0], [200.0, 84574.99324324325]], "isOverall": false, "label": "Get Login Page", "isController": false}, {"data": [[172.17000000000013, 67805.82000000002]], "isOverall": false, "label": "Get Login Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3766.2833333333333, "minX": 1.5226155E12, "maxY": 601369.8166666667, "series": [{"data": [[1.52261592E12, 43912.48333333333], [1.52261562E12, 601369.8166666667], [1.5226158E12, 58485.816666666666], [1.5226155E12, 361850.9666666667], [1.52261598E12, 24765.9], [1.52261568E12, 7866.0], [1.52261586E12, 43240.683333333334], [1.52261556E12, 426701.93333333335], [1.52261604E12, 34092.01666666667], [1.52261574E12, 21819.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.52261592E12, 21671.116666666665], [1.52261562E12, 14415.683333333332], [1.5226158E12, 25566.116666666665], [1.5226155E12, 6506.9], [1.52261598E12, 12653.766666666666], [1.52261568E12, 3766.2833333333333], [1.52261586E12, 14483.4], [1.52261556E12, 7888.183333333333], [1.52261604E12, 22057.966666666667], [1.52261574E12, 10529.35]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52261604E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 20078.173076923078, "minX": 1.5226155E12, "maxY": 212753.82474226807, "series": [{"data": [[1.52261562E12, 125906.1052631579], [1.5226158E12, 212753.82474226807], [1.52261568E12, 182323.8125], [1.52261586E12, 205457.43333333332], [1.52261556E12, 108580.0], [1.52261574E12, 211200.8918918919]], "isOverall": false, "label": "Generate Login Request", "isController": false}, {"data": [[1.52261592E12, 115290.11538461536], [1.52261598E12, 98700.14814814813], [1.52261586E12, 119525.18181818181], [1.52261604E12, 84303.3853211009]], "isOverall": false, "label": "Generate Cheep", "isController": false}, {"data": [[1.52261592E12, 117458.5752212389], [1.5226158E12, 125827.66666666669], [1.52261598E12, 112620.46153846153], [1.52261586E12, 119949.3947368421], [1.52261574E12, 141785.5]], "isOverall": false, "label": "Get Home Page", "isController": false}, {"data": [[1.52261562E12, 96735.11494252871], [1.5226155E12, 20078.173076923078], [1.52261556E12, 67231.86885245901]], "isOverall": false, "label": "Get Login Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52261604E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 4633.365384615386, "minX": 1.5226155E12, "maxY": 41079.69999999998, "series": [{"data": [[1.52261562E12, 6786.315789473685], [1.5226158E12, 35563.525773195885], [1.52261568E12, 16821.3125], [1.52261586E12, 41079.69999999998], [1.52261556E12, 4887.0], [1.52261574E12, 32109.08108108108]], "isOverall": false, "label": "Generate Login Request", "isController": false}, {"data": [[1.52261592E12, 27135.307692307695], [1.52261598E12, 30719.999999999996], [1.52261586E12, 35776.27272727272], [1.52261604E12, 20031.605504587158]], "isOverall": false, "label": "Generate Cheep", "isController": false}, {"data": [[1.52261592E12, 27973.300884955755], [1.5226158E12, 35096.79166666667], [1.52261598E12, 30063.999999999996], [1.52261586E12, 34243.73684210526], [1.52261574E12, 33453.25]], "isOverall": false, "label": "Get Home Page", "isController": false}, {"data": [[1.52261562E12, 25874.310344827587], [1.5226155E12, 4633.365384615386], [1.52261556E12, 14941.60655737705]], "isOverall": false, "label": "Get Login Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52261604E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.0804597701149425, "minX": 1.5226155E12, "maxY": 21.153846153846153, "series": [{"data": [[1.52261562E12, 2.9999999999999996], [1.5226158E12, 2.2886597938144337], [1.52261568E12, 2.5], [1.52261586E12, 2.1666666666666665], [1.52261556E12, 3.0], [1.52261574E12, 2.486486486486487]], "isOverall": false, "label": "Generate Login Request", "isController": false}, {"data": [[1.52261592E12, 2.576923076923077], [1.52261598E12, 2.9074074074074074], [1.52261586E12, 2.4545454545454546], [1.52261604E12, 3.5137614678899087]], "isOverall": false, "label": "Generate Cheep", "isController": false}, {"data": [[1.52261592E12, 5.831858407079645], [1.5226158E12, 2.25], [1.52261598E12, 21.153846153846153], [1.52261586E12, 2.815789473684211], [1.52261574E12, 2.75]], "isOverall": false, "label": "Get Home Page", "isController": false}, {"data": [[1.52261562E12, 1.0804597701149425], [1.5226155E12, 9.653846153846152], [1.52261556E12, 5.540983606557377]], "isOverall": false, "label": "Get Login Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52261604E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1271.0, "minX": 1.5226155E12, "maxY": 220422.0, "series": [{"data": [[1.52261592E12, 121992.0], [1.52261562E12, 158837.0], [1.5226158E12, 220422.0], [1.5226155E12, 44336.0], [1.52261598E12, 113446.0], [1.52261568E12, 199033.0], [1.52261586E12, 207397.0], [1.52261556E12, 108580.0], [1.52261604E12, 92479.0], [1.52261574E12, 219418.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.52261592E12, 113064.0], [1.52261562E12, 85975.0], [1.5226158E12, 129506.0], [1.5226155E12, 1271.0], [1.52261598E12, 90253.0], [1.52261568E12, 163048.0], [1.52261586E12, 88916.0], [1.52261556E12, 45059.0], [1.52261604E12, 74457.0], [1.52261574E12, 139026.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.52261592E12, 212119.5], [1.52261562E12, 103544.3], [1.5226158E12, 215968.2], [1.5226155E12, 38237.2], [1.52261598E12, 211517.6], [1.52261568E12, 144429.0], [1.52261586E12, 214011.5], [1.52261556E12, 80217.0], [1.52261604E12, 210910.5], [1.52261574E12, 206231.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.52261592E12, 219938.08], [1.52261562E12, 152278.58000000002], [1.5226158E12, 220195.44], [1.5226155E12, 44336.0], [1.52261598E12, 219825.52], [1.52261568E12, 196433.3], [1.52261586E12, 220173.32], [1.52261556E12, 105205.59999999987], [1.52261604E12, 219437.19999999998], [1.52261574E12, 218910.6]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.52261592E12, 217004.1], [1.52261562E12, 125970.04999999994], [1.5226158E12, 218274.4], [1.5226155E12, 40962.799999999996], [1.52261598E12, 216699.19999999998], [1.52261568E12, 177813.5], [1.52261586E12, 217655.15], [1.52261556E12, 83329.5], [1.52261604E12, 215997.75], [1.52261574E12, 215838.6]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52261604E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 35742.0, "minX": 0.0, "maxY": 141808.0, "series": [{"data": [[0.0, 141808.0], [1.0, 94044.0], [2.0, 120733.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 39803.5], [2.0, 35742.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 2.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 29796.0, "series": [{"data": [[0.0, 16294.0], [1.0, 23072.0], [2.0, 29796.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0], [2.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 2.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.52261544E12, "maxY": 4.15, "series": [{"data": [[1.52261544E12, 0.016666666666666666], [1.52261592E12, 1.5833333333333333], [1.52261562E12, 1.8166666666666667], [1.5226158E12, 2.0], [1.5226155E12, 4.15], [1.52261598E12, 0.5833333333333334], [1.52261568E12, 0.25], [1.52261586E12, 1.1], [1.52261556E12, 1.0166666666666666], [1.52261574E12, 0.8166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52261598E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5226155E12, "maxY": 2.3, "series": [{"data": [[1.52261592E12, 2.3], [1.52261562E12, 1.7333333333333334], [1.5226158E12, 1.9666666666666666], [1.5226155E12, 0.8666666666666667], [1.52261598E12, 1.1166666666666667], [1.52261568E12, 0.26666666666666666], [1.52261586E12, 1.3166666666666667], [1.52261556E12, 1.0333333333333334], [1.52261604E12, 1.8166666666666667], [1.52261574E12, 0.8166666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.52261592E12, 0.016666666666666666], [1.52261562E12, 0.03333333333333333], [1.5226158E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52261604E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5226155E12, "maxY": 1.8833333333333333, "series": [{"data": [[1.5226158E12, 0.05]], "isOverall": false, "label": "Get Home Page-failure", "isController": false}, {"data": [[1.52261562E12, 1.45], [1.5226155E12, 0.8666666666666667], [1.52261556E12, 1.0166666666666666]], "isOverall": false, "label": "Get Login Page-success", "isController": false}, {"data": [[1.52261592E12, 1.8833333333333333], [1.5226158E12, 0.35], [1.52261598E12, 0.21666666666666667], [1.52261586E12, 0.6333333333333333], [1.52261574E12, 0.2]], "isOverall": false, "label": "Get Home Page-success", "isController": false}, {"data": [[1.52261562E12, 0.03333333333333333]], "isOverall": false, "label": "Generate Login Request-failure", "isController": false}, {"data": [[1.52261592E12, 0.016666666666666666]], "isOverall": false, "label": "Generate Cheep-failure", "isController": false}, {"data": [[1.52261592E12, 0.4166666666666667], [1.52261598E12, 0.9], [1.52261586E12, 0.18333333333333332], [1.52261604E12, 1.8166666666666667]], "isOverall": false, "label": "Generate Cheep-success", "isController": false}, {"data": [[1.52261562E12, 0.2833333333333333], [1.5226158E12, 1.6166666666666667], [1.52261568E12, 0.26666666666666666], [1.52261586E12, 0.5], [1.52261556E12, 0.016666666666666666], [1.52261574E12, 0.6166666666666667]], "isOverall": false, "label": "Generate Login Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52261604E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
